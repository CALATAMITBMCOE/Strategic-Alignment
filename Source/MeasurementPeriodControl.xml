<gel:script xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:core="jelly:core"
    xmlns:file="jelly:com.niku.union.gel.FileTagLibrary"
    xmlns:gel="jelly:com.niku.union.gel.GELTagLibrary"
    xmlns:soap="jelly:com.niku.union.gel.SOAPTagLibrary"
    xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:sql="jelly:sql" xmlns:xog="http://www.niku.com/xog"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-inSTance">
	
   	<!--============================================================-->
	<!-- Package: STrategic Alignment 5.0 							-->
	<!-- Process: STrategic Indicators Calculation 					-->
	<!-- STep	: Indicator Calculation and Rollup					-->
	<!-- Action	: Auto Measurement Calculation						-->
   	<!--============================================================-->
	<!-- Object : n/a												-->
   	<!--============================================================-->
	<!-- Calculate Indicator Level values for all Indicators 		-->
   	<!--============================================================-->
	
	<core:if teST="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="STart Script"/>
		<gel:log level="debug" message=">>PersiSTed XOG URL   : ${XOGURL}"/> 
		<gel:log level="debug" message=">>PersiSTed LOG Folder: ${XOGlogFolder}"/> 
		<gel:log level="debug" message=">>PersiSTed WEB Folder: ${XOGwebFolder}"/> 
		<gel:log level="debug" message=">>PersiSTed SessionID : ${sessionID}"/> 
		<gel:log level="debug" message=">>PersiSTed DebugLevel: ${DebugLevel}"/> 
		<gel:log level="debug" message=">>PersiSTed dbVendor  : ${dbVendor}"/> 
	</core:if>

    <gel:setDataSource dbId="niku"/>

	<gel:parse var="v_xml_indicators">
		<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-inSTance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_cuSTomObjectInSTance.xsd">
			<Header action="write" externalSource="NIKU" objectType="cuSTomObjectInSTance" version="13.0.0.6982"/>
			<cuSTomObjectInSTances objectCode="STrat_kpi"/>
		</NikuDataBus>
	</gel:parse>
	
	<!-- Next Measurement Control -->
	<gel:log level="debug" message="Calculating Next Measurement Date"/> 
	<core:set var="vFound" value="0"/>

	<!-- SQL Server Compatibility -->
	<core:set var="sqlSTatement">
		to_char(Ind.Next_Measure_Date,'YYYY-MM-DD'), 
		Case Ind.STrat_Meas_Per
			When 'W' Then SUBSTRING(CONVERT(NVARCHAR(30),DATEADD(day,7,Ind.Next_Measure_Date),20),1,10) 
			When 'BW' Then SUBSTRING(CONVERT(NVARCHAR(30),DATEADD(day,14,Ind.Next_Measure_Date),20),1,10) 
			When 'M' Then SUBSTRING(CONVERT(NVARCHAR(30),DATEADD(month,1,Ind.Next_Measure_Date),20),1,10) 
			When 'BM' Then SUBSTRING(CONVERT(NVARCHAR(30),DATEADD(month,2,Ind.Next_Measure_Date),20),1,10) 
			When 'Q' Then SUBSTRING(CONVERT(NVARCHAR(30),DATEADD(month,3,Ind.Next_Measure_Date),20),1,10) 
			When 'H' Then SUBSTRING(CONVERT(NVARCHAR(30),DATEADD(month,6,Ind.Next_Measure_Date),20),1,10) 
			When 'Y' Then SUBSTRING(CONVERT(NVARCHAR(30),DATEADD(year,1,Ind.Next_Measure_Date),20),1,10) 
		End Update_Measure_Date,
		Case Ind.STrat_Meas_Per
			When 'W' Then SUBSTRING(CONVERT(NVARCHAR(30),DATEADD(day,7,Ind.Next_Measure_Date),20),1,10) 
			When 'BW' Then SUBSTRING(CONVERT(NVARCHAR(30),DATEADD(day,14,Ind.Next_Measure_Date),20),1,10) 
			When 'M' Then SUBSTRING(CONVERT(NVARCHAR(30),DATEADD(month,1,Ind.Next_Measure_Date),20),1,7)
			When 'BM' Then SUBSTRING(CONVERT(NVARCHAR(30),DATEADD(month,2,Ind.Next_Measure_Date),20),1,7)
			When 'Q' Then DATENAME(year, DATEADD(month,3,Ind.Next_Measure_Date))+'-'+DATENAME(quarter,DATEADD(month,3,Ind.Next_Measure_Date))
			When 'H' Then 
			  Case 
				  When DATEPART(month, DATEADD(month,6,Ind.Next_Measure_Date)) &lt; 7 Then DATENAME(year,DATEADD(month,6,Ind.Next_Measure_Date))+'-1' 
				  Else DATENAME(year,DATEADD(month,6,Ind.Next_Measure_Date))+'-2' 
			  End
			When 'Y' DATENAME(year,DATEADD(year,1,Ind.Next_Measure_Date))
			Else ' '
		End Update_Measure_Name
	</core:set>
	<core:if teST="${dbVendor=='oracle'}">
		<core:set var="sqlSTatement">
			to_char(Ind.Next_Measure_Date,'YYYY-MM-DD'), 
			Case Ind.STrat_Meas_Per
				When 'W' Then to_char(Ind.Next_Measure_Date+7,'YYYY-MM-DD')
				When 'BW' Then to_char(Ind.Next_Measure_Date+14,'YYYY-MM-DD')
				When 'M' Then to_char(add_months(Ind.Next_Measure_Date,1),'YYYY-MM-DD')
				When 'BM' Then to_char(add_months(Ind.Next_Measure_Date,2),'YYYY-MM-DD')
				When 'Q' Then to_char(add_months(Ind.Next_Measure_Date,3),'YYYY-MM-DD')
				When 'H' Then to_char(add_months(Ind.Next_Measure_Date,6),'YYYY-MM-DD')
				When 'Y' Then to_char(add_months(Ind.Next_Measure_Date,12),'YYYY-MM-DD')
			End Update_Measure_Date,
			Case Ind.STrat_Meas_Per
				When 'W' Then to_char(Ind.Next_Measure_Date+7,'YYYY-MM-DD')
				When 'BW' Then to_char(Ind.Next_Measure_Date+14,'YYYY-MM-DD')
				When 'M' Then to_char(add_months(Ind.Next_Measure_Date,1),'YYYY-Mon')
				When 'BM' Then to_char(add_months(Ind.Next_Measure_Date,2),'YYYY-Mon')
				When 'Q' Then to_char(add_months(Ind.Next_Measure_Date,3),'YYYY-Q')
				When 'H' Then 
				  Case 
					  When EXTRACT(month FROM add_months(Ind.Next_Measure_Date,6)) &lt; 7 Then to_char(EXTRACT(year FROM add_months(Ind.Next_Measure_Date,6)))||'-1' 
					  Else to_char(EXTRACT(year FROM add_months(Ind.Next_Measure_Date,6)))||'-2' 
				  End
				When 'Y' Then to_char(add_months(Ind.Next_Measure_Date,12),'YYYY')
				Else ' '
			End Update_Measure_Name
		</core:set>
	</core:if>

	
    <sql:query escapeText="false" var="vIndicatorUpdateNextDate">
		select Ind.Name, Ind.code, Ind.id, Ind.STrat_Meas_Per,
		${sqlSTatement} 
		from ODF_CA_STRAT_KPI Ind
			INNER JOIN ODF_CA_STRAT_KPI_MEASURE SKM	
				ON  SKM.ODF_PARENT_ID = Ind.ID
				AND SKM.MEASUREMENT_DATE = (SELECT MAX(SKM2.MEASUREMENT_DATE) 
                                    FROM ODF_CA_STRAT_KPI_MEASURE SKM2
                                    WHERE SKM2.ODF_PARENT_ID = Ind.ID
                                    AND SKM2.MEASUREMENT_DATE &lt;= ${currentdateFunction})
		where Ind.Next_measure_date &lt; ${currentdateFunction}
	</sql:query>
    <core:forEach items="${vIndicatorUpdateNextDate.rowsByIndex}" var="row">
		<core:set var="vFoundNextDate" value="1"/>
        <core:set var="vInd_Name">${row[0]}</core:set>
        <core:set var="vInd_Code">${row[1]}</core:set>
        <core:set var="vInd_Intl">${row[2]}</core:set>
        <core:set var="vInd_MPer">${row[3]}</core:set>
        <core:set var="vInd_Next_Date">${row[4]}</core:set>
        <core:set var="vInd_Updt_Date">${row[5]}</core:set>
        <core:set var="vInd_Updt_Name">${row[6]}</core:set>
		<core:if teST="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="Updating Next Date: ${vInd_Name}-${vInd_Code}-${vInd_Intl}. Period=${vInd_MPer} NextDate=${vInd_Next_Date}. Will update Next_Measure_Date to ${vInd_Updt_Date} and create empty Measurement ${vInd_Updt_Name}."/>
		</core:if>
		<gel:parse var="v_xml_indicator_inSTance">
			<inSTance inSTanceCode="${vInd_Code}" objectCode="STrat_kpi">
				<CuSTomInformation>
					<ColumnValue name="Next_Measure_Date">${vInd_Updt_Date}</ColumnValue>
					<ColumnValue name="LaST_Measure_STatus">0</ColumnValue>
					<inSTance inSTanceCode="${vInd_Code}-${vInd_Updt_Name}" objectCode="STrat_kpi_measure" parentInSTanceCode="${vInd_Code}" parentObjectCode="STrat_kpi">
						<CuSTomInformation>
							<ColumnValue name="name">${vInd_Updt_Name}</ColumnValue>
							<ColumnValue name="code">${vInd_Code}-${vInd_Updt_Name}</ColumnValue>
							<ColumnValue name="measurement_date">${vInd_Updt_Date}</ColumnValue>
							<ColumnValue name="measurement_value"/>
							<ColumnValue name="itemSTatus">0</ColumnValue>
							<ColumnValue name="kpi_STatus"/>
						</CuSTomInformation>
					</inSTance>
				</CuSTomInformation>
			</inSTance>
		</gel:parse>
		<gel:set insert="true" select="$v_xml_indicators/NikuDataBus/cuSTomObjectInSTances" value="${v_xml_indicator_inSTance}"/>
	</core:forEach>

	<!-- If Dates to Update were found, run XOG to update -->
	<core:if teST="${vFoundNextDate == 1}">
		<core:if teST="${DebugLevel &gt; 1}">
			<gel:serialize var="${v_xml_indicators}" fileName="${XOGwebFolder}/XOGWrite_IndDateUpdate.xml"/>
			<gel:log level="debug" message="XOG Write can be found at: ${XOGURL}/niku/XOGWrite_IndDateUpdate.xml"/> 
		</core:if>

		<!-- Calling XOG-->
		<core:catch var="v_xog_exception">
			<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult0">
				<soap:message>
					<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
						<soapenv:Header>
							<xog:Auth>
								<xog:SessionID>${sessionID}</xog:SessionID>
							</xog:Auth>
						</soapenv:Header>
						<soapenv:Body>
							<gel:include select="$v_xml_indicators/NikuDataBus"/>
						</soapenv:Body>
					</soapenv:Envelope>
				</soap:message>
			</soap:invoke>
		</core:catch>
	
		<core:choose>
			<core:when teST="${v_xog_exception != null}">
				<gel:log category="XOG" level="ERROR">XOG operation failed: ${v_xog_exception}</gel:log>
			</core:when>
			<core:otherwise>
				<gel:set select="$runresult0/soapenv:Envelope/soapenv:Body/XOGOutput" var="writeOutputRoot0"/>
				<gel:set asSTring="true" select="$writeOutputRoot0/STatus/@STate" var="XOGoutcome"/>
				<gel:set asSTring="true" select="$writeOutputRoot0/Records/Record" var="XOGoutputrecords"/>
				<gel:set asSTring="true" select="$writeOutputRoot0/STatiSTics/@totalNumberOfRecords" var="XOGtotalrecords"/>
				<gel:set asSTring="true" select="$writeOutputRoot0/STatiSTics/@insertedRecords" var="XOGinsertedrecords"/>
				<gel:set asSTring="true" select="$writeOutputRoot0/STatiSTics/@updatedRecords" var="XOGupdatedrecords"/>
				<gel:set asSTring="true" select="$writeOutputRoot0/STatiSTics/@failureRecords" var="XOGfailurerecords"/>
				<!-- Check the XOG result -->
				<gel:log category="XOG" level="INFO">Document import for KPI Targets STatus:${XOGoutcome} Total Objs: ${XOGtotalrecords}, Total inserted: ${XOGinsertedrecords}, Total updated: ${XOGupdatedrecords}, Total failed: ${XOGfailurerecords}</gel:log>
			</core:otherwise>
		</core:choose>
		
		<core:if teST="${DebugLevel &gt; 1}">
			<gel:serialize var="${runresult0}" fileName="${XOGwebFolder}/XOGResults_IndDateUpdate.xml"/>
			<gel:log level="debug" message="XOG Results can be found at: ${XOGURL}/niku/XOGResults_IndDateUpdate.xml"/> 
		</core:if>
		
	</core:if>

    <!-- Missing Measurement Control -->
	<gel:parse var="v_xml_indicators2">
		<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-inSTance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_cuSTomObjectInSTance.xsd">
			<Header action="write" externalSource="NIKU" objectType="cuSTomObjectInSTance" version="13.0.0.6982"/>
			<cuSTomObjectInSTances objectCode="STrat_kpi"/>
		</NikuDataBus>
	</gel:parse>
	
	<gel:log level="debug" message="Generating Pending and Automatic Measurement Data"/> 
	<core:set var="vFoundPendingMeasure" value="0"/>

	<!-- SQL Server Compatibility -->
	<core:set var="nextMeasureDate" value="SUBSTRING(CONVERT(NVARCHAR(30),Ind.Next_Measure_Date, 20),1,10)"/>
	<core:if teST="${dbVendor=='oracle'}">
		<core:set var="nextMeasureDate" value="to_char(Ind.Next_Measure_Date,'YYYY-MM-DD')"/>
	</core:if>
	
    <sql:query escapeText="false" var="vIndicatorPendingMeasures">
		select IndM.Name, IndM.code, IndM.id, IndM.measurement_date, Ind.Code, Ind.STrat_Meas_Per, ${nextMeasureDate}
		from ODF_CA_STRAT_KPI_MEASURE IndM
			Inner Join ODF_CA_STRAT_KPI Ind on Ind.ID = IndM.ODF_PARENT_ID
		where IndM.measurement_date &lt; ${currentdateFunction} and IndM.measurement_value is null
	</sql:query>
    <core:forEach items="${vIndicatorPendingMeasures.rowsByIndex}" var="row">
		<core:set var="vFoundPendingMeasure" value="1"/>
        <core:set var="vMeas_Name">${row[0]}</core:set>
        <core:set var="vMeas_Code">${row[1]}</core:set>
        <core:set var="vMeas_Intl">${row[2]}</core:set>
        <core:set var="vMeas_Date">${row[3]}</core:set>
        <core:set var="vInd_Code">${row[4]}</core:set>
        <core:set var="vInd_MPer">${row[5]}</core:set>
        <core:set var="vInd_Next_Date">${row[6]}</core:set>
		<core:if teST="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="Indicator Pending Measurement: ${vMeas_Name}-${vMeas_Code}-${vMeas_Intl} for ${vInd_Code}. Period=${vInd_MPer} NextDate=${vInd_Next_Date}. Will update LaST Measure STatus to Missing."/>
		</core:if>
		
		<gel:parse var="v_xml_indicator_inSTance2">
			<inSTance inSTanceCode="${vInd_Code}" objectCode="STrat_kpi">
				<CuSTomInformation>
					<ColumnValue name="LaST_Measure_STatus">-1</ColumnValue>
					<inSTance inSTanceCode="${vMeas_Code}" objectCode="STrat_kpi_measure" parentInSTanceCode="${vInd_Code}" parentObjectCode="STrat_kpi">
						<CuSTomInformation>
							<ColumnValue name="name">${vMeas_Name}</ColumnValue>
							<ColumnValue name="code">${vMeas_Code}</ColumnValue>
							<ColumnValue name="itemSTatus">-1</ColumnValue>
							<ColumnValue name="kpi_STatus">0</ColumnValue>
						</CuSTomInformation>
					</inSTance>
				</CuSTomInformation>
			</inSTance>
		</gel:parse>
		<gel:set insert="true" select="$v_xml_indicators2/NikuDataBus/cuSTomObjectInSTances" value="${v_xml_indicator_inSTance2}"/>
	</core:forEach>

	<!-- If Pending Measurements were found, run XOG to update -->
	<core:if teST="${vFoundPendingMeasure == 1}">
		<core:if teST="${DebugLevel &gt; 1}">
			<gel:serialize var="${v_xml_indicators2}" fileName="${XOGwebFolder}/XOGWrite_IndUpdateMeasureDate.xml"/>
			<gel:log level="debug" message="XOG Write can be found at: ${XOGURL}/niku/XOGWrite_IndUpdateMeasureDate.xml"/> 
		</core:if>

		<!-- Calling XOG-->
		<core:catch var="v_xog_exception">
			<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult01">
				<soap:message>
					<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
						<soapenv:Header>
							<xog:Auth>
								<xog:SessionID>${sessionID}</xog:SessionID>
							</xog:Auth>
						</soapenv:Header>
						<soapenv:Body>
							<gel:include select="$v_xml_indicators2/NikuDataBus"/>
						</soapenv:Body>
					</soapenv:Envelope>
				</soap:message>
			</soap:invoke>
		</core:catch>
	
		<core:choose>
			<core:when teST="${v_xog_exception != null}">
				<gel:log category="XOG" level="ERROR">XOG operation failed: ${v_xog_exception}</gel:log>
			</core:when>
			<core:otherwise>
				<gel:set select="$runresult01/soapenv:Envelope/soapenv:Body/XOGOutput" var="writeOutputRoot0"/>
				<gel:set asSTring="true" select="$writeOutputRoot0/STatus/@STate" var="XOGoutcome"/>
				<gel:set asSTring="true" select="$writeOutputRoot0/Records/Record" var="XOGoutputrecords"/>
				<gel:set asSTring="true" select="$writeOutputRoot0/STatiSTics/@totalNumberOfRecords" var="XOGtotalrecords"/>
				<gel:set asSTring="true" select="$writeOutputRoot0/STatiSTics/@insertedRecords" var="XOGinsertedrecords"/>
				<gel:set asSTring="true" select="$writeOutputRoot0/STatiSTics/@updatedRecords" var="XOGupdatedrecords"/>
				<gel:set asSTring="true" select="$writeOutputRoot0/STatiSTics/@failureRecords" var="XOGfailurerecords"/>
				<!-- Check the XOG result -->
				<gel:log category="XOG" level="INFO">Document import for KPI Targets STatus:${XOGoutcome} Total Objs: ${XOGtotalrecords}, Total inserted: ${XOGinsertedrecords}, Total updated: ${XOGupdatedrecords}, Total failed: ${XOGfailurerecords}</gel:log>
			</core:otherwise>
		</core:choose>
		
		<core:if teST="${DebugLevel &gt; 1}">
			<gel:serialize var="${runresult01}" fileName="${XOGwebFolder}/XOGResults_IndUpdateMeasureDate.xml"/>
			<gel:log level="debug" message="XOG Results can be found at: ${XOGURL}/niku/XOGResults_IndUpdateMeasureDate.xml"/> 
		</core:if>
		
	</core:if>

</gel:script>