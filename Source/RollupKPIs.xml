<gel:script xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:core="jelly:core"
    xmlns:file="jelly:com.niku.union.gel.FileTagLibrary"
    xmlns:gel="jelly:com.niku.union.gel.GELTagLibrary"
    xmlns:soap="jelly:com.niku.union.gel.SOAPTagLibrary"
    xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:sql="jelly:sql" xmlns:xog="http://www.niku.com/xog"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<!---------------------------------------------------------------->
	<!-- Package: Strategic Alignment 4.0 							-->
	<!-- Process: Strategic KPI Calculation 						-->
	<!-- Step	: Rollup KPIs										-->
	<!-- Action	: Rollup KPIs										-->
	<!---------------------------------------------------------------->
	<!-- Object : n/a												-->
	<!---------------------------------------------------------------->
	<!-- Recalculate all KPIs Status and Strategic Item Status	 	-->
	<!---------------------------------------------------------------->
	
	<core:if test="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="Start Script"/>
		<gel:log level="debug" message=">>Persisted XOG URL   : ${XOGURL}"/> 
		<gel:log level="debug" message=">>Persisted LOG Folder: ${XOGlogFolder}"/> 
		<gel:log level="debug" message=">>Persisted WEB Folder: ${XOGwebFolder}"/> 
		<gel:log level="debug" message=">>Persisted SessionID : ${sessionID}"/> 
		<gel:log level="debug" message=">>Persisted DebugLevel: ${DebugLevel}"/> 
	</core:if>

    <gel:setDataSource dbId="niku"/>

	<gel:parse var="v_xml_targets">
		<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_customObjectInstance.xsd">
			<Header action="write" externalSource="NIKU" objectType="customObjectInstance" version="13.0.0.6982"/>
			<customObjectInstances objectCode="strat_kpi_target"/>
		</NikuDataBus>
	</gel:parse>

    <!-- updating Targets with current status -->
	<gel:log level="debug" message="Updating KPI Status for all Targets for All Active KPIs"/> 
	<core:set var="vFoundKPIs" value="0"/>
    <sql:query escapeText="false" var="vKPITargets">
		Select 	SK.NAME, SK.CODE, SK.ID, SK.KPI_SIGN, SKT.CODE, SKT.TARGET_DATE, SKT.TARGET_VALUE, SKM.MEASUREMENT_DATE, SKM.MEASUREMENT_VALUE, 
   			    case when SK.KPI_SIGN = 'LOW' 
					then
						Case when (1-((nvl(SKM.MEASUREMENT_VALUE,0)-nvl(SKT.TARGET_VALUE,0))/nvl(SKT.TARGET_VALUE,1))) &gt; 0
							then
								1-((nvl(SKM.MEASUREMENT_VALUE,0)-nvl(SKT.TARGET_VALUE,0))/nvl(SKT.TARGET_VALUE,1))
							else	
								0
							end
					else 
						nvl(SKM.MEASUREMENT_VALUE,0)/nvl(SKT.TARGET_VALUE,1)
					end 
		FROM ODF_CA_STRAT_KPI SK 
			INNER JOIN ODF_CA_STRAT_KPI_TARGET SKT 
				ON SKT.ODF_PARENT_ID = SK.ID
			INNER JOIN ODF_CA_STRAT_KPI_MEASURE SKM	
				ON  SKM.ODF_PARENT_ID = SK.ID
				AND SKM.MEASUREMENT_DATE = (SELECT MAX(SKM2.MEASUREMENT_DATE) 
                                    FROM ODF_CA_STRAT_KPI_MEASURE SKM2
                                    WHERE SKM2.ODF_PARENT_ID = SK.ID
                                    AND SKM2.MEASUREMENT_DATE &lt;= SKT.TARGET_DATE)
		WHERE SK.ACTIVE = 1
	</sql:query>
    <core:forEach items="${vKPITargets.rowsByIndex}" var="row">
		<core:set var="vFoundKPITargets" value="1"/>
        <core:set var="vKPI_Name">${row[0]}</core:set>
        <core:set var="vKPI_Code">${row[1]}</core:set>
        <core:set var="vKPI_Intl">${row[2]}</core:set>
        <core:set var="vKPI_Sign">${row[3]}</core:set>
        <core:set var="vKPITarg_Code">${row[4]}</core:set>
        <core:set var="vKPITarg_Date">${row[5]}</core:set>
        <core:set var="vKPITarg_Valu">${row[6]}</core:set>
        <core:set var="vKPIMeas_Date">${row[7]}</core:set>
        <core:set var="vKPIMeas_Valu">${row[8]}</core:set>
        <core:set var="vKPI_Stat">${row[9]}</core:set>

		<sql:query escapeText="false" var="vItemScale">
			select itemstatus
			from ODF_CA_STRAT_ITEM_SCALE
			where odf_parent_id = ${vKPI_Intl} and ${vKPI_Stat} between lowvalue and highvalue
		</sql:query>
		<core:forEach items="${vItemScale.rowsByIndex}" var="row">
			<core:set var="vItemScale_ItemStatus">${row[0]}</core:set>
		</core:forEach>

		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="-- KPI Target Found: ${vKPI_Name}-${vKPI_Code} Sign=${vKPI_Sign} - Found Target: ${vKPITarg_Code} - ${vKPITarg_Date}-${vKPITarg_Valu}. Respective Measurement is: ${vKPIMeas_Date}-${vKPIMeas_Valu}. KPI Status: ${vKPI_Stat}."/> 
		</core:if>
		<gel:parse var="v_xml_target_instance">
			<instance instanceCode="${vKPITarg_Code}" objectCode="strat_kpi_target" parentInstanceCode="${vKPI_Code}" parentObjectCode="strat_kpi">
				<CustomInformation>
					<ColumnValue name="itemstatus">${vItemScale_ItemStatus}</ColumnValue>
					<ColumnValue name="kpi_status">${vKPI_Stat}</ColumnValue>
				</CustomInformation>
			</instance>
		</gel:parse>
		<gel:set insert="true" select="$v_xml_targets/NikuDataBus/customObjectInstances" value="${v_xml_target_instance}"/>
		
	</core:forEach>

	<!-- If KPI Targets were found, run XOG to update -->
	<core:if test="${vFoundKPITargets == 1}">
		<core:if test="${DebugLevel &gt; 1}">
			<gel:serialize var="${v_xml_targets}" fileName="${XOGwebFolder}/XOGWrite_KPITargets_Calc.xml"/>
			<gel:log level="debug" message="XOG Write can be found at: ${XOGURL}/niku/XOGWrite_KPITargets_Calc.xml"/> 
		</core:if>

		<!-- Calling XOG-->
		<core:catch var="v_xog_exception">
			<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult">
				<soap:message>
					<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
						<soapenv:Header>
							<xog:Auth>
								<xog:SessionID>${sessionID}</xog:SessionID>
							</xog:Auth>
						</soapenv:Header>
						<soapenv:Body>
							<gel:include select="$v_xml_targets/NikuDataBus"/>
						</soapenv:Body>
					</soapenv:Envelope>
				</soap:message>
			</soap:invoke>
		</core:catch>
	
		<core:choose>
			<core:when test="${v_xog_exception != null}">
				<gel:log category="XOG" level="ERROR">XOG operation failed: ${v_xog_exception}</gel:log>
			</core:when>
			<core:otherwise>
				<gel:set select="$runresult/soapenv:Envelope/soapenv:Body/XOGOutput" var="writeOutputRoot"/>
				<gel:set asString="true" select="$writeOutputRoot/Status/@state" var="XOGoutcome"/>
				<gel:set asString="true" select="$writeOutputRoot/Records/Record" var="XOGoutputrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@totalNumberOfRecords" var="XOGtotalrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@insertedRecords" var="XOGinsertedrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@updatedRecords" var="XOGupdatedrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@failureRecords" var="XOGfailurerecords"/>
				<!-- Check the XOG result -->
				<gel:log category="XOG" level="INFO">Document import for KPI Targets status:${XOGoutcome} Total Objs: ${XOGtotalrecords}, Total inserted: ${XOGinsertedrecords}, Total updated: ${XOGupdatedrecords}, Total failed: ${XOGfailurerecords}</gel:log>
			</core:otherwise>
		</core:choose>
		
		<core:if test="${DebugLevel &gt; 1}">
			<gel:serialize var="${runresult}" fileName="${XOGwebFolder}/XOGResults_KPITargets_Calc.xml"/>
			<gel:log level="debug" message="XOG Results can be found at: ${XOGURL}/niku/XOGResults_KPITargets_Calc.xml"/> 
		</core:if>
		
	</core:if>
		
	<gel:parse var="v_xml_measures">
		<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_customObjectInstance.xsd">
			<Header action="write" externalSource="NIKU" objectType="customObjectInstance" version="13.0.0.6982"/>
			<customObjectInstances objectCode="strat_kpi_measure"/>
		</NikuDataBus>
	</gel:parse>

    <!-- updating Measurements with current status -->
	<gel:log level="debug" message="Updating KPI Status for all Measurements for All Active KPIs"/> 
	<core:set var="vFoundKPIs" value="0"/>
    <sql:query escapeText="false" var="vKPIMeasures">
		Select 	SK.NAME, SK.CODE, SK.ID, SK.KPI_SIGN, SKM.CODE, SKT.TARGET_DATE, SKT.TARGET_VALUE, SKM.MEASUREMENT_DATE, SKM.MEASUREMENT_VALUE, 
   			    case when SK.KPI_SIGN = 'LOW' 
					then
						Case when (1-((nvl(SKM.MEASUREMENT_VALUE,0)-nvl(SKT.TARGET_VALUE,0))/nvl(SKT.TARGET_VALUE,1))) &gt; 0
							then
								1-((nvl(SKM.MEASUREMENT_VALUE,0)-nvl(SKT.TARGET_VALUE,0))/nvl(SKT.TARGET_VALUE,1))
							else	
								0
							end
					else 
						nvl(SKM.MEASUREMENT_VALUE,0)/nvl(SKT.TARGET_VALUE,1)
					end 
		FROM ODF_CA_STRAT_KPI SK 
			INNER JOIN ODF_CA_STRAT_KPI_MEASURE SKM	
				ON  SKM.ODF_PARENT_ID = SK.ID
			INNER JOIN ODF_CA_STRAT_KPI_TARGET SKT
				ON SKT.ODF_PARENT_ID = SK.ID
				AND SKT.TARGET_DATE = (SELECT MIN(SKT2.TARGET_DATE) 
                                    FROM ODF_CA_STRAT_KPI_TARGET SKT2
                                    WHERE SKT2.ODF_PARENT_ID = SK.ID
                                    AND SKT2.TARGET_DATE &gt;= SKM.MEASUREMENT_DATE)
		WHERE SK.ACTIVE = 1
	</sql:query>
    <core:forEach items="${vKPIMeasures.rowsByIndex}" var="row">
		<core:set var="vFoundKPIMeasures" value="1"/>
        <core:set var="vKPI_Name">${row[0]}</core:set>
        <core:set var="vKPI_Code">${row[1]}</core:set>
        <core:set var="vKPI_Intl">${row[2]}</core:set>
        <core:set var="vKPI_Sign">${row[3]}</core:set>
        <core:set var="vKPIMeas_Code">${row[4]}</core:set>
        <core:set var="vKPITarg_Date">${row[5]}</core:set>
        <core:set var="vKPITarg_Valu">${row[6]}</core:set>
        <core:set var="vKPIMeas_Date">${row[7]}</core:set>
        <core:set var="vKPIMeas_Valu">${row[8]}</core:set>
        <core:set var="vKPI_Stat">${row[9]}</core:set>

		<sql:query escapeText="false" var="vItemScale">
			select itemstatus
			from ODF_CA_STRAT_ITEM_SCALE
			where odf_parent_id = ${vKPI_Intl} and ${vKPI_Stat} between lowvalue and highvalue
		</sql:query>
		<core:forEach items="${vItemScale.rowsByIndex}" var="row">
			<core:set var="vItemScale_ItemStatus">${row[0]}</core:set>
		</core:forEach>
		
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="-- KPI Measurement Found: ${vKPI_Name}-${vKPI_Code} Sign=${vKPI_Sign} - Found Measure: ${vKPIMeas_Code} - ${vKPITarg_Date}-${vKPITarg_Valu}. Respective Measurement is: ${vKPIMeas_Date}-${vKPIMeas_Valu}. KPI Status: ${vKPI_Stat}."/> 
		</core:if>
		<gel:parse var="v_xml_measure_instance">
			<instance instanceCode="${vKPIMeas_Code}" objectCode="strat_kpi_measure" parentInstanceCode="${vKPI_Code}" parentObjectCode="strat_kpi">
				<CustomInformation>
					<ColumnValue name="itemstatus">${vItemScale_ItemStatus}</ColumnValue>
					<ColumnValue name="kpi_status">${vKPI_Stat}</ColumnValue>
				</CustomInformation>
			</instance>
		</gel:parse>
		<gel:set insert="true" select="$v_xml_measures/NikuDataBus/customObjectInstances" value="${v_xml_measure_instance}"/>
		
	</core:forEach>

	<!-- If KPI Measurements were found, run XOG to update -->
	<core:if test="${vFoundKPIMeasures == 1}">
		<core:if test="${DebugLevel &gt; 1}">
			<gel:serialize var="${v_xml_measures}" fileName="${XOGwebFolder}/XOGWrite_KPIMeasures_Calc.xml"/>
			<gel:log level="debug" message="XOG Write can be found at: ${XOGURL}/niku/XOGWrite_KPIMeasures_Calc.xml"/> 
		</core:if>

		<!-- Calling XOG-->
		<core:catch var="v_xog_exception">
			<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult1">
				<soap:message>
					<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
						<soapenv:Header>
							<xog:Auth>
								<xog:SessionID>${sessionID}</xog:SessionID>
							</xog:Auth>
						</soapenv:Header>
						<soapenv:Body>
							<gel:include select="$v_xml_measures/NikuDataBus"/>
						</soapenv:Body>
					</soapenv:Envelope>
				</soap:message>
			</soap:invoke>
		</core:catch>
	
		<core:choose>
			<core:when test="${v_xog_exception != null}">
				<gel:log category="XOG" level="ERROR">XOG operation failed: ${v_xog_exception}</gel:log>
			</core:when>
			<core:otherwise>
				<gel:set select="$runresult1/soapenv:Envelope/soapenv:Body/XOGOutput" var="writeOutputRoot"/>
				<gel:set asString="true" select="$writeOutputRoot/Status/@state" var="XOGoutcome"/>
				<gel:set asString="true" select="$writeOutputRoot/Records/Record" var="XOGoutputrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@totalNumberOfRecords" var="XOGtotalrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@insertedRecords" var="XOGinsertedrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@updatedRecords" var="XOGupdatedrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@failureRecords" var="XOGfailurerecords"/>
				<!-- Check the XOG result -->
				<gel:log category="XOG" level="INFO">Document import for KPI Measures status:${XOGoutcome} Total Objs: ${XOGtotalrecords}, Total inserted: ${XOGinsertedrecords}, Total updated: ${XOGupdatedrecords}, Total failed: ${XOGfailurerecords}</gel:log>
			</core:otherwise>
		</core:choose>
		
		<core:if test="${DebugLevel &gt; 1}">
			<gel:serialize var="${runresult1}" fileName="${XOGwebFolder}/XOGResults_KPIMeasures_Calc.xml"/>
			<gel:log level="debug" message="XOG Results can be found at: ${XOGURL}/niku/XOGResults_KPIMeasures_Calc.xml"/> 
		</core:if>
		
	</core:if>

	<gel:parse var="v_xml_root">
		<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_customObjectInstance.xsd">
			<Header action="write" externalSource="NIKU" objectType="customObjectInstance" version="13.0.0.6982"/>
			<customObjectInstances objectCode="strat_kpi"/>
		</NikuDataBus>
	</gel:parse>

    <!-- Updating Current Target, Current Measurement and Current Status for all Active KPIs -->
	<gel:log level="debug" message="Updating Current Measurement, Target and Status for All Active KPIs"/> 
	<core:set var="vFoundKPIs" value="0"/>
    <sql:query escapeText="false" var="vKPIs">
		Select 	SK.NAME, SK.CODE, SK.ID, SK.KPI_SIGN, 
				SKT.TARGET_DATE, SKT.TARGET_VALUE, 
				SKM.MEASUREMENT_DATE, SKM.MEASUREMENT_VALUE,
   			    case when SK.KPI_SIGN = 'LOW' 
					then
						Case when (1-((nvl(SKM.MEASUREMENT_VALUE,0)-nvl(SKT.TARGET_VALUE,0))/nvl(SKT.TARGET_VALUE,1))) &gt; 0
							then
								1-((nvl(SKM.MEASUREMENT_VALUE,0)-nvl(SKT.TARGET_VALUE,0))/nvl(SKT.TARGET_VALUE,1))
							else	
								0
							end
					else 
						nvl(SKM.MEASUREMENT_VALUE,0)/nvl(SKT.TARGET_VALUE,1)
					end 
		FROM ODF_CA_STRAT_KPI SK
			INNER JOIN ODF_CA_STRAT_KPI_TARGET SKT 
				ON  SKT.ODF_PARENT_ID = SK.ID
				AND SKT.TARGET_DATE = (SELECT MIN(SKT2.TARGET_DATE) 
										FROM ODF_CA_STRAT_KPI_TARGET SKT2
										WHERE SKT2.ODF_PARENT_ID = SK.ID
										AND SKT2.TARGET_DATE &gt;= sysdate)
			INNER JOIN ODF_CA_STRAT_KPI_MEASURE SKM	
				ON  SKM.ODF_PARENT_ID = SK.ID
				AND SKM.MEASUREMENT_DATE = (SELECT MAX(SKM2.MEASUREMENT_DATE) 
                                    FROM ODF_CA_STRAT_KPI_MEASURE SKM2
                                    WHERE SKM2.ODF_PARENT_ID = SK.ID
                                    AND SKM2.MEASUREMENT_DATE &lt;= SKT.TARGET_DATE)
		WHERE SK.ACTIVE = 1 
	</sql:query>
    <core:forEach items="${vKPIs.rowsByIndex}" var="row">
		<core:set var="vFoundKPIs" value="1"/>
        <core:set var="vKPI_Name">${row[0]}</core:set>
        <core:set var="vKPI_Code">${row[1]}</core:set>
        <core:set var="vKPI_Intl">${row[2]}</core:set>
        <core:set var="vKPI_Sign">${row[3]}</core:set>
        <core:set var="vKPITarg_Date">${row[4]}</core:set>
        <core:set var="vKPITarg_Valu">${row[5]}</core:set>
        <core:set var="vKPIMeas_Date">${row[6]}</core:set>
        <core:set var="vKPIMeas_Valu">${row[7]}</core:set>
        <core:set var="vKPI_Stat">${row[8]}</core:set>
		
		<sql:query escapeText="false" var="vItemScale">
			select itemstatus
			from ODF_CA_STRAT_ITEM_SCALE
			where odf_parent_id = ${vKPI_Intl} and ${vKPI_Stat} between lowvalue and highvalue
		</sql:query>
		<core:forEach items="${vItemScale.rowsByIndex}" var="row">
			<core:set var="vItemScale_ItemStatus">${row[0]}</core:set>
		</core:forEach>
		
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="-- KPI Found: ${vKPI_Name}-${vKPI_Code} Sign=${vKPI_Sign} - Current Target is: ${vKPITarg_Date}-${vKPITarg_Valu}. Current Measurement is: ${vKPIMeas_Date}-${vKPIMeas_Valu}. KPI Status: ${vKPI_Stat}. Item Status: ${vItemScale_ItemStatus}."/> 
		</core:if>

		<gel:parse var="v_xml_instance">
			<instance instanceCode="${vKPI_Code}" objectCode="strat_kpi">
				<CustomInformation>
					<ColumnValue name="strat_item_status">${vItemScale_ItemStatus}</ColumnValue>
					<ColumnValue name="current_measurement">${vKPIMeas_Valu}</ColumnValue>
					<ColumnValue name="current_target">${vKPITarg_Valu}</ColumnValue>
					<ColumnValue name="kpi_target_measure">${vKPI_Stat}</ColumnValue>
				</CustomInformation>
			</instance>
		</gel:parse>
		<gel:set insert="true" select="$v_xml_root/NikuDataBus/customObjectInstances" value="${v_xml_instance}"/>
		
	</core:forEach>
	
	<!-- If KPIs were found, run XOG to update -->
	<core:if test="${vFoundKPIs == 1}">
		<core:if test="${DebugLevel &gt; 1}">
			<gel:serialize var="${v_xml_root}" fileName="${XOGwebFolder}/XOGWrite_KPI_Calc.xml"/>
			<gel:log level="debug" message="XOG Write can be found at: ${XOGURL}/niku/XOGWrite_KPI_Calc.xml"/> 
		</core:if>

		<!-- Calling XOG-->
		<core:catch var="v_xog_exception">
			<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult2">
				<soap:message>
					<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
						<soapenv:Header>
							<xog:Auth>
								<xog:SessionID>${sessionID}</xog:SessionID>
							</xog:Auth>
						</soapenv:Header>
						<soapenv:Body>
							<gel:include select="$v_xml_root/NikuDataBus"/>
						</soapenv:Body>
					</soapenv:Envelope>
				</soap:message>
			</soap:invoke>
		</core:catch>
	
		<core:choose>
			<core:when test="${v_xog_exception != null}">
				<gel:log category="XOG" level="ERROR">XOG operation failed: ${v_xog_exception}</gel:log>
			</core:when>
			<core:otherwise>
				<gel:set select="$runresult2/soapenv:Envelope/soapenv:Body/XOGOutput" var="writeOutputRoot"/>
				<gel:set asString="true" select="$writeOutputRoot/Status/@state" var="XOGoutcome"/>
				<gel:set asString="true" select="$writeOutputRoot/Records/Record" var="XOGoutputrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@totalNumberOfRecords" var="XOGtotalrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@insertedRecords" var="XOGinsertedrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@updatedRecords" var="XOGupdatedrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@failureRecords" var="XOGfailurerecords"/>
				<!-- Check the XOG result -->
				<gel:log category="XOG" level="INFO">Document import for KPIs status:${XOGoutcome} Total Objs: ${XOGtotalrecords}, Total inserted: ${XOGinsertedrecords}, Total updated: ${XOGupdatedrecords}, Total failed: ${XOGfailurerecords}</gel:log>
			</core:otherwise>
		</core:choose>
		
		<core:if test="${DebugLevel &gt; 1}">
			<gel:serialize var="${runresult2}" fileName="${XOGwebFolder}/XOGResults_KPI_Calc.xml.xml"/>
			<gel:log level="debug" message="XOG Results can be found at: ${XOGURL}/niku/XOGResults_KPI_Calc.xml.xml"/> 
		</core:if>
		
	</core:if>
	
	<!-- SET KPI LEVEL -->
	<sql:update escapeText="false" var="vItemsUpdate">
			update ODF_CA_STRAT_KPI
			SET STRAT_KPI_LEVEL = 1 
	</sql:update>
	<core:if test="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="Items Updated to 1: ${vItemsUpdate}."/> 
	</core:if>	
	
	<core:set var="vChildLevel" value="1"/>
	<core:set var="vFoundChildren" value="1"/>
	<core:while test="${vFoundChildren &gt; 0}">
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="Will Update ${vChildLevel}."/> 
		</core:if>	
		<core:set var="vFoundChildren" value="0"/>
		<sql:query escapeText="false" var="vKPIsToUpdate">
			SELECT DISTINCT MVL.PK_ID 
				from ODF_CA_STRAT_KPI KPI 
					INNER JOIN ODF_MULTI_VALUED_LOOKUPS MVL
					ON MVL.ATTRIBUTE = 'strat_children_kpi' and MVL.OBJECT = 'strat_kpi' and MVL.VALUE = KPI.ID
				where KPI.STRAT_KPI_LEVEL = ${vChildLevel}
		</sql:query>
		<core:forEach items="${vKPIsToUpdate.rowsByIndex}" var="row">
			<core:set var="vKPI2U_Intl">${row[0]}</core:set>
			<sql:update escapeText="false" var="vItemsUpdate">
				update ODF_CA_STRAT_KPI
				SET STRAT_KPI_LEVEL = STRAT_KPI_LEVEL + 1
				WHERE ID = ${vKPI2U_Intl}
			</sql:update>
			<core:set var="vFoundChildren" value="1"/>
			<core:if test="${DebugLevel &gt; 0}">
				<gel:log level="debug" message="-- KPI Level ${vKPI2U_Intl} updated."/> 
			</core:if>	
		</core:forEach>
		<core:set var="vChildLevel" value="${vChildLevel + 1}"/>
	</core:while>

	<core:if test="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="Max Child Level ${vChildLevel}."/> 
	</core:if>	
	
	<!-- Rolling UP KPI_STATUS-->
	<core:set var="vCurrentLevel" value="1"/>
	<!-- Follow the KPI Tree from the Lowest Level -->
	<core:while test="${vChildLevel &gt;= vCurrentLevel}">
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="-- Rolling UP KPI_ROLLUP_CHILDREN Current Level ${vCurrentLevel}."/> 
		</core:if>	
		<!-- Calculate KPI_ROLLUP_CHILDREN for all KPIs on this Level -->
		<sql:update escapeText="false" var="vItemsUpdate">
			UPDATE ODF_CA_STRAT_KPI
				SET KPI_ROLLUP_CHILDREN = (select nvl(max(CHILDKPI.KPI_STATUS),0)
											from ODF_CA_STRAT_KPI CHILDKPI 
												INNER JOIN ODF_MULTI_VALUED_LOOKUPS MVL
													ON MVL.ATTRIBUTE = 'strat_children_kpi' and MVL.OBJECT = 'strat_kpi' and MVL.VALUE = CHILDKPI.ID
											where MVL.PK_ID = ODF_CA_STRAT_KPI.ID)
			WHERE STRAT_ROLLUP_KPI = 'MAX' AND STRAT_KPI_LEVEL = ${vCurrentLevel}
		</sql:update>		
		<sql:update escapeText="false" var="vItemsUpdate">
			UPDATE ODF_CA_STRAT_KPI
				SET KPI_ROLLUP_CHILDREN = (select nvl(min(CHILDKPI.KPI_STATUS),0)
											from ODF_CA_STRAT_KPI CHILDKPI 
												INNER JOIN ODF_MULTI_VALUED_LOOKUPS MVL
													ON MVL.ATTRIBUTE = 'strat_children_kpi' and MVL.OBJECT = 'strat_kpi' and MVL.VALUE = CHILDKPI.ID
											where MVL.PK_ID = ODF_CA_STRAT_KPI.ID)
			WHERE STRAT_ROLLUP_KPI = 'MIN' AND STRAT_KPI_LEVEL = ${vCurrentLevel}
		</sql:update>		
		<sql:update escapeText="false" var="vItemsUpdate">
			UPDATE ODF_CA_STRAT_KPI
				SET KPI_ROLLUP_CHILDREN = (select nvl(avg(CHILDKPI.KPI_STATUS),0)
											from ODF_CA_STRAT_KPI CHILDKPI 
												INNER JOIN ODF_MULTI_VALUED_LOOKUPS MVL
													ON MVL.ATTRIBUTE = 'strat_children_kpi' and MVL.OBJECT = 'strat_kpi' and MVL.VALUE = CHILDKPI.ID
											where MVL.PK_ID = ODF_CA_STRAT_KPI.ID)
			WHERE STRAT_ROLLUP_KPI = 'AVG' AND STRAT_KPI_LEVEL = ${vCurrentLevel}
		</sql:update>

		<!-- For Level 1 (Lower Level Children) Set KPI_STATUS = KPI_TARGET_MEASURE-->
		<core:if test="${vCurrentLevel == 1}">
			<core:if test="${DebugLevel &gt; 0}">
				<gel:log level="debug" message="-- KPI_STATUS for Current Level ${vCurrentLevel} will be KPI_TARGET_MEASURE."/> 
			</core:if>	
			<sql:update escapeText="false" var="vItemsUpdate">
				UPDATE ODF_CA_STRAT_KPI
					SET KPI_STATUS = KPI_TARGET_MEASURE
				WHERE STRAT_KPI_LEVEL = ${vCurrentLevel}
			</sql:update>		
		</core:if>

		<!-- For All other Levels (Parents) Set KPI_STATUS according to KPI_STATUS_DEFN -->
		<core:if test="${vCurrentLevel &gt; 1}">
			<core:if test="${DebugLevel &gt; 0}">
				<gel:log level="debug" message="-- KPI_STATUS for Current Level ${vCurrentLevel} will be decided by KPI_STATUS_DEFN."/> 
			</core:if>	
		
			<sql:update escapeText="false" var="vItemsUpdate">
				UPDATE ODF_CA_STRAT_KPI
					SET KPI_STATUS = Case When KPI_ROLLUP_CHILDREN &gt; KPI_TARGET_MEASURE 
										Then KPI_ROLLUP_CHILDREN Else KPI_TARGET_MEASURE End 
				WHERE KPI_STATUS_DEFN = 'B'
				AND STRAT_KPI_LEVEL = ${vCurrentLevel}
			</sql:update>		
			<sql:update escapeText="false" var="vItemsUpdate">
				UPDATE ODF_CA_STRAT_KPI
					SET KPI_STATUS = Case When KPI_ROLLUP_CHILDREN &lt; KPI_TARGET_MEASURE 
										Then KPI_ROLLUP_CHILDREN Else KPI_TARGET_MEASURE End 
				WHERE KPI_STATUS_DEFN = 'W'
				AND STRAT_KPI_LEVEL = ${vCurrentLevel}
			</sql:update>		C
			<sql:update escapeText="false" var="vItemsUpdate">
				UPDATE ODF_CA_STRAT_KPI
					SET KPI_STATUS = KPI_ROLLUP_CHILDREN
				WHERE KPI_STATUS_DEFN = 'C'
				AND STRAT_KPI_LEVEL = ${vCurrentLevel}
			</sql:update>				
			<sql:update escapeText="false" var="vItemsUpdate">
				UPDATE ODF_CA_STRAT_KPI
					SET KPI_STATUS = KPI_TARGET_MEASURE
				WHERE KPI_STATUS_DEFN = 'TM'
				AND STRAT_KPI_LEVEL = ${vCurrentLevel}
			</sql:update>				
			<sql:update escapeText="false" var="vItemsUpdate">
				UPDATE ODF_CA_STRAT_KPI
					SET KPI_STATUS = (KPI_TARGET_MEASURE + KPI_ROLLUP_CHILDREN)/2
				WHERE KPI_STATUS_DEFN = 'A'
				AND STRAT_KPI_LEVEL = ${vCurrentLevel}
			</sql:update>				
		</core:if>
		<core:set var="vCurrentLevel" value="${vCurrentLevel+1}"/>
	</core:while>

	<core:if test="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="- Update Item Status after RollUp."/> 
	</core:if>	
	
	<!-- Update Item Status again, after RollUp -->
	<sql:update escapeText="false" var="vItemsUpdate">
		UPDATE ODF_CA_STRAT_KPI
			SET strat_item_status = (select SC.itemstatus
									from ODF_CA_STRAT_ITEM_SCALE SC
									where SC.odf_parent_id = ODF_CA_STRAT_KPI.ID and ODF_CA_STRAT_KPI.KPI_STATUS between SC.lowvalue and SC.highvalue)
	</sql:update>				
		
	<gel:parse var="v_xml_items">
		<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_customObjectInstance.xsd">
			<Header action="write" externalSource="NIKU" objectType="customObjectInstance" version="13.0.0.6982"/>
			<customObjectInstances objectCode="strategic_item"/>
		</NikuDataBus>
	</gel:parse>

    <!-- Now, Calculate KPIs Status at the Strategic Items Level -->
	<!-- First, Calculate all Direct KPIs -->
	<gel:log level="debug" message="Updating Direct KPI Status for All Active Strategic Items "/> 
	<core:set var="vFoundItems" value="0"/>
    <sql:query escapeText="false" var="vItems">
		Select 	SI.NAME, SI.CODE, SI.ID, SI.ROLLUP_METHOD
		FROM ODF_CA_STRATEGIC_ITEM SI
		WHERE SI.ACTIVE = 1 
	</sql:query>
    <core:forEach items="${vItems.rowsByIndex}" var="row">
        <core:set var="vItem_Name">${row[0]}</core:set>
        <core:set var="vItem_Code">${row[1]}</core:set>
        <core:set var="vItem_Intl">${row[2]}</core:set>
        <core:set var="vItem_Roll">${row[3]}</core:set>
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="-- SI Found: ${vItem_Name}-${vItem_Code} will Rollup ${vItem_Roll}."/> 
		</core:if>
		
		<core:choose>
			<core:when test="${vItem_Roll=='Worst'}">
				<core:set var="vAggrFunction" value="MIN"/>
			</core:when>
			<core:when test="${vItem_Roll=='Best'}">
				<core:set var="vAggrFunction" value="MAX"/>
			</core:when>
			<core:otherwise>
				<core:set var="vAggrFunction" value="AVG"/>
			</core:otherwise>
		</core:choose>
			
		<sql:query escapeText="false" var="vItemKPIs">
			Select ${vAggrFunction}(SK.KPI_STATUS), ${vAggrFunction}(SK.STRAT_ITEM_STATUS)
			FROM ODF_CA_STRAT_KPI SK 
				INNER JOIN ODF_MULTI_VALUED_LOOKUPS MVL
					ON MVL.OBJECT = 'strategic_item'
					AND MVL.ATTRIBUTE = 'related_kpis'
					AND MVL.PK_ID = ${vItem_Intl}
					AND MVL.VALUE = SK.ID 
			WHERE SK.ACTIVE = 1
		</sql:query>
		<core:forEach items="${vItemKPIs.rowsByIndex}" var="row">
			<core:set var="vFoundItems" value="1"/>
			<core:set var="vItem_KPIStatus">${row[0]}</core:set>
			<core:set var="vItem_ItemStatus">${row[1]}</core:set>
			<core:if test="${DebugLevel &gt; 0}">
				<gel:log level="debug" message="---- SI Calculated Status from KPIs: ${vItem_KPIStatus}-${vItem_ItemStatus} for ${vItem_Code}."/> 
				<core:if test="${DebugLevel &gt; 1}">
					<gel:log level="debug" message="------ Aggregate Function = ${vAggrFunction} Item Internal ID = ${vItem_Intl}. "/> 
				</core:if>
			</core:if>
			
			<gel:parse var="v_xml_item_instance">
				<instance instanceCode="${vItem_Code}" objectCode="strategic_item">
					<CustomInformation>
						<ColumnValue name="kpi_status_direct">${vItem_KPIStatus}</ColumnValue>
						<ColumnValue name="item_status_direct">${vItem_ItemStatus}</ColumnValue>
					</CustomInformation>
				</instance>
			</gel:parse>
			<gel:set insert="true" select="$v_xml_items/NikuDataBus/customObjectInstances" value="${v_xml_item_instance}"/>
		</core:forEach>
		
    </core:forEach>
	
	<!-- If Items were found, run XOG to update -->
	<core:if test="${vFoundItems == 1}">
		<core:if test="${DebugLevel &gt; 1}">
			<gel:serialize var="${v_xml_items}" fileName="${XOGwebFolder}/XOGWrite_KPI_Calc_Items.xml"/>
			<gel:log level="debug" message="XOG Write can be found at: ${XOGURL}/niku/XOGWrite_KPI_Calc_Items.xml"/> 
		</core:if>

		<!-- Calling XOG-->
		<core:catch var="v_xog_exception">
			<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult3">
				<soap:message>
					<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
						<soapenv:Header>
							<xog:Auth>
								<xog:SessionID>${sessionID}</xog:SessionID>
							</xog:Auth>
						</soapenv:Header>
						<soapenv:Body>
							<gel:include select="$v_xml_items/NikuDataBus"/>
						</soapenv:Body>
					</soapenv:Envelope>
				</soap:message>
			</soap:invoke>
		</core:catch>
	
		<core:choose>
			<core:when test="${v_xog_exception != null}">
				<gel:log category="XOG" level="ERROR">XOG operation failed: ${v_xog_exception}</gel:log>
			</core:when>
			<core:otherwise>
				<gel:set select="$runresult3/soapenv:Envelope/soapenv:Body/XOGOutput" var="writeOutputRoot"/>
				<gel:set asString="true" select="$writeOutputRoot/Status/@state" var="XOGoutcome"/>
				<gel:set asString="true" select="$writeOutputRoot/Records/Record" var="XOGoutputrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@totalNumberOfRecords" var="XOGtotalrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@insertedRecords" var="XOGinsertedrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@updatedRecords" var="XOGupdatedrecords"/>
				<gel:set asString="true" select="$writeOutputRoot/Statistics/@failureRecords" var="XOGfailurerecords"/>
				<!-- Check the XOG result -->
				<gel:log category="XOG" level="INFO">Document import for Items status:${XOGoutcome} Total Objs: ${XOGtotalrecords}, Total inserted: ${XOGinsertedrecords}, Total updated: ${XOGupdatedrecords}, Total failed: ${XOGfailurerecords}</gel:log>
			</core:otherwise>
		</core:choose>
		
		<core:if test="${DebugLevel &gt; 1}">
			<gel:serialize var="${runresult3}" fileName="${XOGwebFolder}/XOGResults_KPI_Calc_Items.xml"/>
			<gel:log level="debug" message="XOG Results can be found at: ${XOGURL}/niku/XOGResults_KPI_Calc_Items.xml"/> 
		</core:if>
	</core:if>
	
	<!-- Now, all Strategic Items Need their RollUP Status from lower levels -->
	<!-- We need to start from the bottom of the tree and work our way up -->
	<gel:log level="debug" message="Updating Rollup Status for All Active Strategic Items"/> 
    <sql:query escapeText="false" var="vLevel">
		Select 	MAX(ITEM_LEVEL)
		FROM ODF_CA_STRATEGIC_ITEM SI
		WHERE SI.ACTIVE = 1 
	</sql:query>
	<core:forEach items="${vLevel.rowsByIndex}" var="row">
		<core:set var="vMaxLevel">${row[0]}</core:set>
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="Found Max Level ${vMaxLevel}."/> 
		</core:if>
	</core:forEach>
	
	<core:set var="vCurrentLevel" value="${vMaxLevel}"/>
	<core:while test="${vCurrentLevel &gt; 0}">
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="-- Processing Level ${vCurrentLevel}"/> 
		</core:if>
		<!-- v_xml_item2 will process RollUp-->
		<gel:parse var="v_xml_items2">
			<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_customObjectInstance.xsd">
				<Header action="write" externalSource="NIKU" objectType="customObjectInstance" version="13.0.0.6982"/>
				<customObjectInstances objectCode="strategic_item"/>
			</NikuDataBus>
		</gel:parse>
		<!-- v_xml_item3 will process Final Status-->
		<gel:parse var="v_xml_items3">
			<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_customObjectInstance.xsd">
				<Header action="write" externalSource="NIKU" objectType="customObjectInstance" version="13.0.0.6982"/>
				<customObjectInstances objectCode="strategic_item"/>
			</NikuDataBus>
		</gel:parse>

		<core:set var="vFoundItems2" value="0"/>
	    <sql:query escapeText="false" var="vItemsRoll">
			Select 	SI.NAME, SI.CODE, SI.ID, SI.ROLLUP_METHOD, SI.STRAT_SCOPE, SI.KPI_STATUS_DEFN, NVL(SI.KPI_STATUS_DIRECT,0), NVL(SI.ITEM_STATUS_DIRECT,0)
			FROM ODF_CA_STRATEGIC_ITEM SI
			WHERE SI.ACTIVE = 1 
			AND SI.ITEM_LEVEL = ${vCurrentLevel}
		</sql:query>
		<core:forEach items="${vItemsRoll.rowsByIndex}" var="row">
			<core:set var="vFoundItems2" value="1"/>
			<core:set var="vItem_Name">${row[0]}</core:set>
			<core:set var="vItem_Code">${row[1]}</core:set>
			<core:set var="vItem_Intl">${row[2]}</core:set>
			<core:set var="vItem_Roll">${row[3]}</core:set>
			<core:set var="vItem_Scop">${row[4]}</core:set>
			<core:set var="vItem_Defn">${row[5]}</core:set>
			<core:set var="vItem_DirK">${row[6]}</core:set>
			<core:set var="vItem_DirI">${row[7]}</core:set>
			<core:if test="${DebugLevel &gt; 0}">
				<gel:log level="debug" message="-- SI Found: ${vItem_Name}-${vItem_Code}-${vItem_Intl} on Scope ${vItem_Scop}. Roll up will be will ${vItem_Roll}. Status will be ${vItem_Defn}. Direct Status = ${vItem_DirK}-${vItem_DirI}."/> 
			</core:if>
			<core:choose>
				<core:when test="${vItem_Roll=='Worst'}">
					<core:set var="vAggrFunction" value="MIN"/>
					<core:set var="vWeight" value=""/>
				</core:when>
				<core:when test="${vItem_Roll=='Best'}">
					<core:set var="vAggrFunction" value="MAX"/>
					<core:set var="vWeight" value=""/>
				</core:when>
				<core:otherwise>
					<core:set var="vAggrFunction" value="SUM"/>
					<core:set var="vWeight" value="SI.WEIGHTPERCENT * "/>
				</core:otherwise>
			</core:choose>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="---- Aggregate Function = ${vAggrFunction} using Weight ${vWeight}."/> 
			</core:if>			
			<core:set var="vChild_KPIStatus">0</core:set>
			<core:set var="vChild_ItemStatus">0</core:set>
			<sql:query escapeText="false" var="vItemKPIs2">
				Select ${vAggrFunction}(${vWeight}SI.KPI_STATUS), ${vAggrFunction}(trunc(${vWeight}SI.ITEMSTATUS,0))
				FROM ODF_CA_STRATEGIC_ITEM SI
				WHERE SI.ACTIVE = 1 
				AND SI.STRAT_SCOPE = ${vItem_Scop}
				AND SI.PARENTITEM = ${vItem_Intl}
			</sql:query>
			<core:forEach items="${vItemKPIs2.rowsByIndex}" var="row">
				<core:set var="vChild_KPIStatus">${row[0]}</core:set>
				<core:set var="vChild_ItemStatus">${row[1]}</core:set>
				<core:if test="${DebugLevel &gt; 0}">
					<gel:log level="debug" message="---- SI Calculated Status from Lower Level: ${vChild_KPIStatus}-${vChild_ItemStatus} for ${vItem_Code}."/> 
					<core:if test="${DebugLevel &gt; 1}">
						<gel:log level="debug" message="------ Item Internal ID = ${vItem_Intl}, Item Scope = ${vItem_Scop}. "/> 
					</core:if>
				</core:if>
			</core:forEach>

			<core:set var="vItem_KPIStatus" value="0" />
			<core:set var="vItem_ItemStatus" value="0" />
			<core:switch on="${vItem_Defn}">
				<core:case value="A">
					<gel:log level="debug" message="--- Will update with AVERAGE"/>
					<core:set var="vItem_KPIStatus" value="${(vItem_DirK + vChild_KPIStatus)/2}" />
					<core:set var="vItem_ItemStatus" value="${(vItem_DirI + vChild_ItemStatus)/2}" />
					<core:invoke method="intValue" on="${vItem_ItemStatus}" var="vItem_ItemStatus">
                    </core:invoke>
					<gel:log level="debug" message="--- Will update with AVERAGE ${vItem_KPIStatus}-${vItem_ItemStatus}"/>
				</core:case>
				<core:case value="B">
					<core:set var="vItem_KPIStatus" value="${vChild_KPIStatus}" />
					<core:set var="vItem_ItemStatus" value="${vChild_ItemStatus}" />
					<core:if test="${vItem_DirK &gt; vChild_KPIStatus}">
						<core:set var="vItem_KPIStatus" value="${vItem_DirK}" />
						<core:set var="vItem_ItemStatus" value="${vItem_DirI}" />
					</core:if>
					<gel:log level="debug" message="--- Will update with BEST ${vItem_KPIStatus}-${vItem_ItemStatus}"/>
				</core:case>
				<core:case value="C">
					<core:set var="vItem_KPIStatus" value="${vChild_KPIStatus}" />
					<core:set var="vItem_ItemStatus" value="${vChild_ItemStatus}" />
					<gel:log level="debug" message="--- Will update with CHILDREN ${vItem_KPIStatus}-${vItem_ItemStatus}"/>
				</core:case>
				<core:case value="D">
					<core:set var="vItem_KPIStatus" value="${vItem_DirK}" />
					<core:set var="vItem_ItemStatus" value="${vItem_DirI}" />
					<gel:log level="debug" message="--- Will update with DIRECT ${vItem_KPIStatus}-${vItem_ItemStatus}"/>
				</core:case>
				<core:case value="W">
					<core:set var="vItem_KPIStatus" value="${vChild_KPIStatus}" />
					<core:set var="vItem_ItemStatus" value="${vChild_ItemStatus}" />
					<core:if test="${vItem_DirK &lt; vChild_KPIStatus}">
						<core:set var="vItem_KPIStatus" value="${vItem_DirK}" />
						<core:set var="vItem_ItemStatus" value="${vItem_DirI}" />
					</core:if>
					<gel:log level="debug" message="--- Will update with WORST ${vItem_KPIStatus}-${vItem_ItemStatus}"/>
				</core:case>
			</core:switch>
			<gel:parse var="v_xml_item_instance2">
				<instance instanceCode="${vItem_Code}" objectCode="strategic_item">
					<CustomInformation>
						<ColumnValue name="kpi_status_children">${vChild_KPIStatus}</ColumnValue>
						<ColumnValue name="item_status_children">${vChild_ItemStatus}</ColumnValue>
						<ColumnValue name="kpi_status">${vItem_KPIStatus}</ColumnValue>
						<ColumnValue name="itemstatus">${vItem_ItemStatus}</ColumnValue>
					</CustomInformation>
				</instance>
			</gel:parse>
			<gel:set insert="true" select="$v_xml_items2/NikuDataBus/customObjectInstances" value="${v_xml_item_instance2}"/>
		</core:forEach>
		<!-- If Items were found, run XOG to update -->
		<core:if test="${vFoundItems2 == 1}">
			<core:if test="${DebugLevel &gt; 1}">
				<gel:serialize var="${v_xml_items2}" fileName="${XOGwebFolder}/XOGWrite_KPI_Calc_Items_Level${vCurrentLevel}.xml"/>
				<gel:log level="debug" message="XOG Write can be found at: ${XOGURL}/niku/XOGWrite_KPI_Calc_Items_Level${vCurrentLevel}.xml"/> 
			</core:if>

			<!-- Calling XOG-->
			<core:catch var="v_xog_exception">
				<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult4">
					<soap:message>
						<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
							<soapenv:Header>
								<xog:Auth>
									<xog:SessionID>${sessionID}</xog:SessionID>
								</xog:Auth>
							</soapenv:Header>
							<soapenv:Body>
								<gel:include select="$v_xml_items2/NikuDataBus"/>
							</soapenv:Body>
						</soapenv:Envelope>
					</soap:message>
				</soap:invoke>
			</core:catch>
	
			<core:choose>
				<core:when test="${v_xog_exception != null}">
					<gel:log category="XOG" level="ERROR">XOG operation failed: ${v_xog_exception}</gel:log>
				</core:when>
				<core:otherwise>
					<gel:set select="$runresult4/soapenv:Envelope/soapenv:Body/XOGOutput" var="writeOutputRoot"/>
					<gel:set asString="true" select="$writeOutputRoot/Status/@state" var="XOGoutcome"/>
					<gel:set asString="true" select="$writeOutputRoot/Records/Record" var="XOGoutputrecords"/>
					<gel:set asString="true" select="$writeOutputRoot/Statistics/@totalNumberOfRecords" var="XOGtotalrecords"/>
					<gel:set asString="true" select="$writeOutputRoot/Statistics/@insertedRecords" var="XOGinsertedrecords"/>
					<gel:set asString="true" select="$writeOutputRoot/Statistics/@updatedRecords" var="XOGupdatedrecords"/>
					<gel:set asString="true" select="$writeOutputRoot/Statistics/@failureRecords" var="XOGfailurerecords"/>
					<!-- Check the XOG result -->
					<gel:log category="XOG" level="INFO">Document import for Items status:${XOGoutcome} Total Objs: ${XOGtotalrecords}, Total inserted: ${XOGinsertedrecords}, Total updated: ${XOGupdatedrecords}, Total failed: ${XOGfailurerecords}</gel:log>
				</core:otherwise>
			</core:choose>
		
			<core:if test="${DebugLevel &gt; 1}">
				<gel:serialize var="${runresult4}" fileName="${XOGwebFolder}/XOGResults_KPI_Calc_Items_Level${vCurrentLevel}.xml"/>
				<gel:log level="debug" message="XOG Results can be found at: ${XOGURL}/niku/XOGResults_KPI_Calc_Items_Level${vCurrentLevel}.xml"/> 
			</core:if>
		</core:if>

		<core:set var="vCurrentLevel" value="${vCurrentLevel-1}"/>

	</core:while>

</gel:script>
