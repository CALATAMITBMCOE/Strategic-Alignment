<gel:script xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:core="jelly:core"
    xmlns:file="jelly:com.niku.union.gel.FileTagLibrary"
    xmlns:gel="jelly:com.niku.union.gel.GELTagLibrary"
    xmlns:soap="jelly:com.niku.union.gel.SOAPTagLibrary"
    xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:sql="jelly:sql" xmlns:xog="http://www.niku.com/xog"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	
   	<!---------------------------------------------------------------->
	<!-- Package: Strategic Alignment 4.0 							-->
	<!-- Process: Strategic Top Down Planning Calculation			-->
	<!-- Step	: Distribute Top Down Planning						-->
	<!-- Action	: Distribute Top Down Planning						-->
	<!---------------------------------------------------------------->
	<!-- Object : Strategic Item (strategic_item)					-->
	<!---------------------------------------------------------------->
	<!-- Distributes the received funds to lower level items using 	-->
	<!-- the defined % Allocation 									-->
	<!---------------------------------------------------------------->
	
    <core:set value="${gel_objectInstanceId}" var="vItem_Intl"/>
	
	<core:if test="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="Start Script"/>
		<gel:log level="debug" message=">>Item ID             : ${vItem_Intl}"/> 
		<gel:log level="debug" message=">>Persisted XOG URL   : ${XOGURL}"/> 
		<gel:log level="debug" message=">>Persisted LOG Folder: ${XOGlogFolder}"/> 
		<gel:log level="debug" message=">>Persisted WEB Folder: ${XOGwebFolder}"/> 
		<gel:log level="debug" message=">>Persisted SessionID : ${sessionID}"/> 
		<gel:log level="debug" message=">>Persisted DebugLevel: ${DebugLevel}"/> 
	</core:if>

    <gel:setDataSource dbId="niku"/>

    <!-- Reading Item Data-->
	<sql:query escapeText="false" var="vMinLevel">
		SELECT SI.ITEM_LEVEL
		FROM ODF_CA_STRATEGIC_ITEM SI
		where SI.ID = ${vItem_Intl}
	</sql:query>
    <core:forEach items="${vMinLevel.rowsByIndex}" var="row">
        <core:set var="vTree_MinL">${row[0]}</core:set>
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="-- Min Level Found: ${vTree_MinL}."/> 
		</core:if>
	</core:forEach>
	
	<sql:query escapeText="false" var="vMaxLevel">
		SELECT MAX(TF.CHILD_LEVEL)
		FROM ODF_CA_STRAT_TREE_FLAT TF
		where TF.PARENT_ITEM = ${vItem_Intl}
		and TF.CHILD_ITEM != ${vItem_Intl}
	</sql:query>
    <core:forEach items="${vMaxLevel.rowsByIndex}" var="row">
        <core:set var="vTree_MaxL">${row[0]}</core:set>
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="-- Max Level Found: ${vTree_MaxL}."/> 
		</core:if>
	</core:forEach>

	<!-- Update Top Down Funds Received for Top Hierarchy -->
	<core:if test="${vTree_MinL == 1}">
		<sql:update escapeText="false" var="vItemFields">
			UPDATE ODF_CA_STRATEGIC_ITEM 
				Set strat_td_rec_fund = strat_top_down_fund,
					strat_td_rec_fte = strat_td_fte,
					strat_td_rec_ben = strat_td_benefit,
					last_updated_date = sysdate,
					last_updated_by = 1
			WHERE ODF_CA_STRATEGIC_ITEM.ID = ${vItem_Intl}
			AND ODF_CA_STRATEGIC_ITEM.ITEM_LEVEL = 1
		</sql:update>
	</core:if>

	<core:set var="vCurrentLevel" value="${vTree_MinL}"/>
	<core:while test="${vCurrentLevel &lt;= vTree_MaxL}">
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="Processing Level ${vCurrentLevel}."/> 
		</core:if>
	
		<!-- Update Top Down Funds Received from Parent Data -->
		<sql:update escapeText="false" var="vItemFields">
			UPDATE ODF_CA_STRATEGIC_ITEM 
				Set strat_td_rec_fund = round(strat_alloc_perc * (select nvl(P.strat_top_down_fund,0) from ODF_CA_STRATEGIC_ITEM P where P.ID = ODF_CA_STRATEGIC_ITEM.PARENTITEM),0),
					strat_top_down_fund = round(strat_alloc_perc * (select nvl(P.strat_top_down_fund,0) from ODF_CA_STRATEGIC_ITEM P where P.ID = ODF_CA_STRATEGIC_ITEM.PARENTITEM),0),
					strat_td_rec_ben = round(strat_alloc_perc * (select nvl(P.strat_td_benefit,0) from ODF_CA_STRATEGIC_ITEM P where P.ID = ODF_CA_STRATEGIC_ITEM.PARENTITEM),0),
					strat_td_benefit = round(strat_alloc_perc * (select nvl(P.strat_td_benefit,0) from ODF_CA_STRATEGIC_ITEM P where P.ID = ODF_CA_STRATEGIC_ITEM.PARENTITEM),0),
					strat_td_rec_fte = round(strat_alloc_perc * (select nvl(P.strat_td_fte,0) from ODF_CA_STRATEGIC_ITEM P where P.ID = ODF_CA_STRATEGIC_ITEM.PARENTITEM),0),
					strat_td_fte = round(strat_alloc_perc * (select nvl(P.strat_td_fte,0) from ODF_CA_STRATEGIC_ITEM P where P.ID = ODF_CA_STRATEGIC_ITEM.PARENTITEM),0),					
					start_date = (select start_date from ODF_CA_STRATEGIC_ITEM P where P.ID = ODF_CA_STRATEGIC_ITEM.PARENTITEM),					
					finish_date = (select finish_date from ODF_CA_STRATEGIC_ITEM P where P.ID = ODF_CA_STRATEGIC_ITEM.PARENTITEM),					
					strat_pfm_manager = (select strat_pfm_manager from ODF_CA_STRATEGIC_ITEM P where P.ID = ODF_CA_STRATEGIC_ITEM.PARENTITEM),					
					currency_code = (select currency_code from ODF_CA_STRATEGIC_ITEM P where P.ID = ODF_CA_STRATEGIC_ITEM.PARENTITEM),					
					last_updated_date = sysdate,
					last_updated_by = 1
			WHERE ODF_CA_STRATEGIC_ITEM.ID 
				IN (select TF.CHILD_ITEM 
					FROM ODF_CA_STRAT_TREE_FLAT TF
					where TF.PARENT_ITEM = ${vItem_Intl}
					and TF.CHILD_ITEM != ${vItem_Intl})
			AND ODF_CA_STRATEGIC_ITEM.ITEM_LEVEL = ${vCurrentLevel}
		</sql:update>
		<core:set var="vCurrentLevel" value="${vCurrentLevel+1}"/>	
	</core:while>		
</gel:script>