<gel:script xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:core="jelly:core"
    xmlns:file="jelly:com.niku.union.gel.FileTagLibrary"
    xmlns:gel="jelly:com.niku.union.gel.GELTagLibrary"
    xmlns:soap="jelly:com.niku.union.gel.SOAPTagLibrary"
    xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:sql="jelly:sql" xmlns:xog="http://www.niku.com/xog"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-inSTance">
	
   	<!--============================================================-->
	<!-- Package: STrategic Alignment 5.0 							-->
	<!-- Process: STrategic Rollup Allocated and Committed Funding	-->
	<!-- STep	: Rollup Funding									-->
	<!-- Action	: Rollup funding									-->
   	<!--============================================================-->
	<!-- Object : STrategic Item (STrategic_item)					-->
   	<!--============================================================-->
	<!-- Rollup Allocation and Commitment to Parent Levels  		-->
   	<!--============================================================-->
	
    <core:set value="${gel_objectInSTanceId}" var="vItem_Intl"/>

	<core:set var="DebugLevel">1</core:set>
	<core:if teST="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="STart Script"/>
		<gel:log level="debug" message=">>Item ID             : ${vItem_Intl}"/> 
		<gel:log level="debug" message=">>PersiSTed XOG URL   : ${XOGURL}"/> 
		<gel:log level="debug" message=">>PersiSTed LOG Folder: ${XOGlogFolder}"/> 
		<gel:log level="debug" message=">>PersiSTed WEB Folder: ${XOGwebFolder}"/> 
		<gel:log level="debug" message=">>PersiSTed SessionID : ${sessionID}"/> 
		<gel:log level="debug" message=">>PersiSTed DebugLevel: ${DebugLevel}"/> 
	</core:if>

    <gel:setDataSource dbId="niku"/>
	
    <!-- Reading Item Data-->
	<sql:query escapeText="false" var="vMinLevel">
		SELECT SI.ITEM_LEVEL, SI.NAME, SI.CODE
		FROM ODF_CA_STRATEGIC_ITEM SI
		where SI.ID = ${vItem_Intl}
	</sql:query>
    <core:forEach items="${vMinLevel.rowsByIndex}" var="row">
        <core:set var="vTree_MinL">${row[0]}</core:set>
        <core:set var="vTree_Name">${row[1]}</core:set>
        <core:set var="vTree_Code">${row[2]}</core:set>
		<core:if teST="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="Top Level Found: ${vTree_Name}-${vTree_Code}. Min Level: ${vTree_MinL}."/> 
		</core:if>
	</core:forEach>
	
	<sql:query escapeText="false" var="vMaxLevel">
		SELECT MAX(TF.CHILD_LEVEL)
		FROM ODF_CA_STRAT_TREE_FLAT TF
		where TF.PARENT_ITEM = ${vItem_Intl}
		and TF.CHILD_ITEM != ${vItem_Intl}
	</sql:query>
    <core:forEach items="${vMaxLevel.rowsByIndex}" var="row">
        <core:set var="vTree_MaxL">${row[0]}</core:set>
		<core:if teST="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="-- Max Level Found: ${vTree_MaxL}."/> 
		</core:if>
	</core:forEach>
	
	<core:set var="vCurrentLevel" value="${vTree_MaxL}"/>
	<core:while teST="${vCurrentLevel &gt;= vTree_MinL}">
		<core:if teST="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="Processing Level ${vCurrentLevel}."/> 
		</core:if>

		<!-- Preparing XML Message -->    	
		<gel:parse var="v_xml_root">
			<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-inSTance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_cuSTomObjectInSTance.xsd">
				<Header action="write" externalSource="NIKU" objectType="cuSTomObjectInSTance" version="13.0.0.6982"/>
					<cuSTomObjectInSTances objectCode="STrategic_item"/>
			</NikuDataBus>
		</gel:parse>

    	<core:set var="vFoundItems" value="0"/>
		<!-- Find Children to accumulate Commitment -->

		<!-- SQL Server Compatibility -->
		<core:set var="STartDate" value="SUBSTRING(CONVERT(NVARCHAR(30),SI.START_DATE, 20),1,10)"/>
		<core:set var="finishDate" value="SUBSTRING(CONVERT(NVARCHAR(30),SI.FINISH_DATE, 20),1,10)"/>
		<core:if teST="${dbVendor=='oracle'}">
			<core:set var="STartDate" value="to_char(SI.START_DATE,'YYYY-MM-DD')"/>
			<core:set var="finishDate" value="to_char(SI.FINISH_DATE,'YYYY-MM-DD')"/>
		</core:if>
		
		<sql:query escapeText="false" var="vChildren">
			SELECT SI.ID, SI.CODE, SI.NAME, ${STartDate}, ${finishDate}
			FROM ODF_CA_STRATEGIC_ITEM SI
				INNER JOIN ODF_CA_STRAT_TREE_FLAT TF ON TF.CHILD_ITEM = SI.ID 
			WHERE TF.PARENT_ITEM = ${vItem_Intl}
			AND SI.ITEM_LEVEL = ${vCurrentLevel}
			AND not EXISTS (select 'x' from ODF_CA_STRATEGIC_ITEM C where C.PARENTITEM = SI.ID)
		</sql:query>
		<core:forEach items="${vChildren.rowsByIndex}" var="row">
			<core:set var="vChild_Intl">${row[0]}</core:set>
			<core:set var="vChild_Code">${row[1]}</core:set>
			<core:set var="vChild_Name">${row[2]}</core:set>
			<core:set var="vChild_STrt">${row[3]}</core:set>
			<core:set var="vChild_Fnsh">${row[4]}</core:set>
			<core:if teST="${DebugLevel &gt; 0}">
				<gel:log level="debug" message="-- Child Item Found: ${vChild_Intl}-${vChild_Code}-${vChild_Name} STart ${vChild_STrt} Finish ${vChild_Fnsh}."/>
			</core:if>

			<!-- Now Find InveSTments connected to the Child Item -->
			<core:set var="vChild_CoST">0</core:set>

			<!-- SQL Server Compatibility -->
			<core:set var="sliceDate" value="SUBSTRING(CONVERT(NVARCHAR(30),C.SLICE_DATE, 20),1,10)"/>
			<core:if teST="${dbVendor=='oracle'}">
				<core:set var="sliceDate" value="to_char(C.SLICE_DATE,'YYYY-MM-DD')"/>
			</core:if>
			
			<sql:query escapeText="false" var="vChildrenCommit1">
				select round(${isNullFunction}(sum(C.SLICE),0),0)
					from INV_INVESTMENTS I
						inner join ODF_CA_INV OI on OI.ID = I.ID
						inner join ODF_OBJECT_INSTANCE_MAPPING OM on OM.PRIMARY_OBJECT_INSTANCE_ID = I.ID 
							and OM.PRIMARY_OBJECT_INSTANCE_CODE = 'project' AND OM.SECONDARY_OBJECT_INSTANCE_CODE = 'financials'
						inner join FIN_FINANCIALS F on F.ID = OM.SECONDARY_OBJECT_INSTANCE_ID
						inner join ODF_SL_PLAN_COST C on C.PRJ_OBJECT_ID = F.ID and C.SLICE_REQUEST_ID = (select ID from PRJ_BLB_SLICEREQUESTS WHERE REQUEST_NAME = 'Planned CoST for Top-Down Plan')
					WHERE OI.STRAT_FUND_SOURCE = ${vChild_Intl} AND I.STATUS = 1 
					AND ${sliceDate} between '${vChild_STrt}' and '${vChild_Fnsh}'
			</sql:query>
			<core:forEach items="${vChildrenCommit1.rowsByIndex}" var="row">
				<core:set var="vChild_CoST">${row[0]}</core:set>
				<core:if teST="${DebugLevel &gt; 0}">
					<gel:log level="debug" message="--- Direct Fund Commitment Found: ${vChild_CoST}."/>
				</core:if>
			</core:forEach>

			<core:set var="vChild_Benf">0</core:set>

			<!-- SQL Server Compatibility -->
			<core:set var="sliceDate" value="SUBSTRING(CONVERT(NVARCHAR(30),B.SLICE_DATE, 20),1,10)"/>
			<core:if teST="${dbVendor=='oracle'}">
				<core:set var="sliceDate" value="to_char(B.SLICE_DATE,'YYYY-MM-DD')"/>
			</core:if>
						
			<sql:query escapeText="false" var="vChildrenCommit2">
				select round(${isNullFunction}(sum(B.SLICE),0),0)
					from INV_INVESTMENTS I
						inner join ODF_CA_INV OI on OI.ID = I.ID
						inner join ODF_OBJECT_INSTANCE_MAPPING OM on OM.PRIMARY_OBJECT_INSTANCE_ID = I.ID 
							and OM.PRIMARY_OBJECT_INSTANCE_CODE = 'project' AND OM.SECONDARY_OBJECT_INSTANCE_CODE = 'financials'
						inner join FIN_FINANCIALS F on F.ID = OM.SECONDARY_OBJECT_INSTANCE_ID
						inner join ODF_SL_PLAN_BENEFIT B on B.PRJ_OBJECT_ID = F.ID and B.SLICE_REQUEST_ID = (select ID from PRJ_BLB_SLICEREQUESTS WHERE REQUEST_NAME = 'Planned Benefit for Top-Down Plan')
					WHERE OI.STRAT_FUND_SOURCE = ${vChild_Intl} AND I.STATUS = 1 
					AND ${sliceDate} between '${vChild_STrt}' and '${vChild_Fnsh}'
			</sql:query>
			<core:forEach items="${vChildrenCommit2.rowsByIndex}" var="row">
				<core:set var="vChild_Benf">${row[0]}</core:set>
				<core:if teST="${DebugLevel &gt; 0}">
					<gel:log level="debug" message="--- Direct Benefit Commitment Found: ${vChild_Benf}."/>
				</core:if>
			</core:forEach>
					
			<gel:parse var="vItemInSTance">
				<inSTance inSTanceCode="${vChild_Code}" objectCode="STrategic_item">
					<CuSTomInformation>
						<ColumnValue name="STrat_commit_funding">${vChild_CoST}</ColumnValue>
						<ColumnValue name="STrat_commit_benefit">${vChild_Benf}</ColumnValue>
					</CuSTomInformation>
				</inSTance>
			</gel:parse>
			
			<!-- Adding the new Item InSTance to the Root Document -->
			<gel:set insert="true" select="$v_xml_root/NikuDataBus/cuSTomObjectInSTances" value="${vItemInSTance}"/>
			<core:set var="vFoundItems" value="1"/>
		</core:forEach>

		<!-- Find Parents to accumulate Commitment -->
		<!-- SQL Server Compatibility -->
		<core:set var="STartDate" value="SUBSTRING(CONVERT(NVARCHAR(30),SI.START_DATE, 20),1,10)"/>
		<core:set var="finishDate" value="SUBSTRING(CONVERT(NVARCHAR(30),SI.FINISH_DATE, 20),1,10)"/>
		<core:if teST="${dbVendor=='oracle'}">
			<core:set var="STartDate" value="to_char(SI.START_DATE,'YYYY-MM-DD')"/>
			<core:set var="finishDate" value="to_char(SI.FINISH_DATE,'YYYY-MM-DD')"/>
		</core:if>
		
		<sql:query escapeText="false" var="vParents">
			SELECT SI.ID, SI.CODE, SI.NAME, ${STartDate}, ${finishDate},
					SUM(CL.STRAT_ALLOC_FUNDING), SUM(CL.STRAT_COMMIT_FUNDING), SUM(CL.STRAT_ALLOC_BENEFIT), SUM(CL.STRAT_COMMIT_BENEFIT), SUM(CL.STRAT_ALLOC_FTE)
			FROM ODF_CA_STRATEGIC_ITEM SI
				INNER JOIN ODF_CA_STRATEGIC_ITEM CL ON CL.PARENTITEM = SI.ID
				INNER JOIN ODF_CA_STRAT_TREE_FLAT TF ON TF.CHILD_ITEM = SI.ID 
			WHERE TF.PARENT_ITEM = ${vItem_Intl}
			AND SI.ITEM_LEVEL = ${vCurrentLevel}
			GROUP BY SI.ID, SI.CODE, SI.NAME, ${STartDate}, ${finishDate}
		</sql:query>
		<core:forEach items="${vParents.rowsByIndex}" var="row">
			<core:set var="vParent_Intl">${row[0]}</core:set>
			<core:set var="vParent_Code">${row[1]}</core:set>
			<core:set var="vParent_Name">${row[2]}</core:set>
			<core:set var="vParent_STrt">${row[3]}</core:set>
			<core:set var="vParent_Fnsh">${row[4]}</core:set>
			<core:set var="vAcc_Alloc_Fund">${row[5]}</core:set>
			<core:set var="vAcc_Commit_Fund">${row[6]}</core:set>
			<core:set var="vAcc_Alloc_Benf">${row[7]}</core:set>
			<core:set var="vAcc_Commit_Benf">${row[8]}</core:set>
			<core:set var="vAcc_Alloc_FTE">${row[9]}</core:set>
			<core:if teST="${DebugLevel &gt; 0}">
				<gel:log level="debug" message="-- Parent Item Found: ${vParent_Intl}-${vParent_Code}-${vParent_Name}."/>
				<gel:log level="debug" message="--- Accumulating Alloc: ${vAcc_Alloc_Fund}-${vAcc_Alloc_Benf}-${vAcc_Alloc_FTE}."/>
				<gel:log level="debug" message="--- Accumulating Commit: ${vAcc_Commit_Fund}-${vAcc_Commit_Benf}."/>
			</core:if>

			<!-- Now Find InveSTments connected directly to the Parent Item -->
			<core:set var="vParent_CoST">0</core:set>

			<!-- SQL Server Compatibility -->
			<core:set var="sliceDate" value="SUBSTRING(CONVERT(NVARCHAR(30),C.SLICE_DATE, 20),1,10)"/>
			<core:if teST="${dbVendor=='oracle'}">
				<core:set var="sliceDate" value="to_char(C.SLICE_DATE,'YYYY-MM-DD')"/>
			</core:if>
						
			<sql:query escapeText="false" var="vChildrenCommit1">
				select round(${isNullFunction}(sum(C.SLICE),0),0)
					from INV_INVESTMENTS I
						inner join ODF_CA_INV OI on OI.ID = I.ID
						inner join ODF_OBJECT_INSTANCE_MAPPING OM on OM.PRIMARY_OBJECT_INSTANCE_ID = I.ID 
							and OM.PRIMARY_OBJECT_INSTANCE_CODE = 'project' AND OM.SECONDARY_OBJECT_INSTANCE_CODE = 'financials'
						inner join FIN_FINANCIALS F on F.ID = OM.SECONDARY_OBJECT_INSTANCE_ID
						inner join ODF_SL_PLAN_COST C on C.PRJ_OBJECT_ID = F.ID and C.SLICE_REQUEST_ID = (select ID from PRJ_BLB_SLICEREQUESTS WHERE REQUEST_NAME = 'Planned CoST for Top-Down Plan')
					WHERE OI.STRAT_FUND_SOURCE = ${vParent_Intl} AND I.STATUS = 1 
					AND ${sliceDate} between '${vParent_STrt}' and '${vParent_Fnsh}'
			</sql:query>
			<core:forEach items="${vChildrenCommit1.rowsByIndex}" var="row">
				<core:set var="vParent_CoST">${row[0]}</core:set>
				<core:if teST="${DebugLevel &gt; 0}">
					<gel:log level="debug" message="--- Direct Commitment Found: ${vParent_CoST}."/>
				</core:if>
			</core:forEach>
			<core:set var="vParent_Benf">0</core:set>
			
			<!-- SQL Server Compatibility -->
			<core:set var="sliceDate" value="SUBSTRING(CONVERT(NVARCHAR(30),B.SLICE_DATE, 20),1,10)"/>
			<core:if teST="${dbVendor=='oracle'}">
				<core:set var="sliceDate" value="to_char(B.SLICE_DATE,'YYYY-MM-DD')"/>
			</core:if>
									
			<sql:query escapeText="false" var="vChildrenCommit2">
				select round(${isNullFunction}(sum(B.SLICE),0),0)
					from INV_INVESTMENTS I
						inner join ODF_CA_INV OI on OI.ID = I.ID
						inner join ODF_OBJECT_INSTANCE_MAPPING OM on OM.PRIMARY_OBJECT_INSTANCE_ID = I.ID 
							and OM.PRIMARY_OBJECT_INSTANCE_CODE = 'project' AND OM.SECONDARY_OBJECT_INSTANCE_CODE = 'financials'
						inner join FIN_FINANCIALS F on F.ID = OM.SECONDARY_OBJECT_INSTANCE_ID
						inner join ODF_SL_PLAN_BENEFIT B on B.PRJ_OBJECT_ID = F.ID and B.SLICE_REQUEST_ID = (select ID from PRJ_BLB_SLICEREQUESTS WHERE REQUEST_NAME = 'Planned Benefit for Top-Down Plan')
					WHERE OI.STRAT_FUND_SOURCE = ${vParent_Intl} AND I.STATUS = 1 
					AND ${sliceDate} between '${vParent_STrt}' and '${vParent_Fnsh}'
			</sql:query>
			<core:forEach items="${vChildrenCommit2.rowsByIndex}" var="row">
				<core:set var="vParent_Benf">${row[0]}</core:set>
				<core:if teST="${DebugLevel &gt; 0}">
					<gel:log level="debug" message="--- Direct Commitment Found: ${vParent_Benf}."/>
				</core:if>
			</core:forEach>
					
			<gel:parse var="vItemInSTance">
				<inSTance inSTanceCode="${vParent_Code}" objectCode="STrategic_item">
					<CuSTomInformation>
						<ColumnValue name="STrat_commit_funding">${vParent_CoST+vAcc_Commit_Fund}</ColumnValue>
						<ColumnValue name="STrat_commit_benefit">${vParent_Benf+vAcc_Commit_Benf}</ColumnValue>
						<ColumnValue name="STrat_alloc_funding">${vAcc_Alloc_Fund}</ColumnValue>
						<ColumnValue name="STrat_alloc_benefit">${vAcc_Alloc_Benf}</ColumnValue>
						<ColumnValue name="STrat_alloc_fte">${vAcc_Alloc_FTE}</ColumnValue>
					</CuSTomInformation>
				</inSTance>
			</gel:parse>
			
			<!-- Adding the new Item InSTance to the Root Document -->
			<gel:set insert="true" select="$v_xml_root/NikuDataBus/cuSTomObjectInSTances" value="${vItemInSTance}"/>
			<core:set var="vFoundItems" value="1"/>
		</core:forEach>
		
		<core:if teST="${vFoundItems == 1}">
			<core:if teST="${DebugLevel &gt; 1}">
				<gel:serialize var="${v_xml_root}" fileName="${XOGwebFolder}/XOGWrite_Acc_${vCurrentLevel}.xml"/>
				<gel:log level="debug" message="XOG Write can be found at: ${XOGURL}/niku/XOGWrite_Acc_${vCurrentLevel}.xml"/> 
			</core:if>

			<!-- Calling XOG-->
			<core:catch var="v_xog_exception">
				<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult">
					<soap:message>
						<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
							<soapenv:Header>
								<xog:Auth>
									<xog:SessionID>${sessionID}</xog:SessionID>
								</xog:Auth>	
							</soapenv:Header>
							<soapenv:Body>
								<gel:include select="$v_xml_root/NikuDataBus"/>
							</soapenv:Body>
						</soapenv:Envelope>
					</soap:message>
				</soap:invoke>
			</core:catch>
			<core:choose>
				<core:when teST="${v_xog_exception != null}">
					<gel:log category="XOG" level="ERROR">XOG operation failed: ${v_xog_exception}</gel:log>
				</core:when>
				<core:otherwise>
					<gel:set select="$runresult/soapenv:Envelope/soapenv:Body/XOGOutput" var="writeOutputRoot"/>
					<gel:set asSTring="true" select="$writeOutputRoot/STatus/@STate" var="XOGoutcome"/>
					<gel:set asSTring="true" select="$writeOutputRoot/STatiSTics/@totalNumberOfRecords" var="XOGtotalrecords"/>
					<gel:set asSTring="true" select="$writeOutputRoot/STatiSTics/@insertedRecords" var="XOGinsertedrecords"/>
					<gel:set asSTring="true" select="$writeOutputRoot/STatiSTics/@updatedRecords" var="XOGupdatedrecords"/>
					<gel:set asSTring="true" select="$writeOutputRoot/STatiSTics/@failureRecords" var="XOGfailurerecords"/> 
					<!-- Check the XOG result -->
					<gel:log category="XOG" level="INFO">[XOGDocument import for Level ${vCurrentLevel} STatus:${XOGoutcome} Total Objs: ${XOGtotalrecords}, Total inserted: ${XOGinsertedrecords}, Total updated: ${XOGupdatedrecords}, Total failed: ${XOGfailurerecords}</gel:log>
				</core:otherwise>
			</core:choose>

			<core:if teST="${DebugLevel &gt; 1}">
				<gel:serialize var="${runresult}" fileName="${XOGwebFolder}/XOGResults_Acc_${vCurrentLevel}.xml"/>
				<gel:log level="debug" message="XOG Results can be found at: ${XOGURL}/niku/XOGResults_Acc_${vCurrentLevel}.xml"/> 
			</core:if>
	
		</core:if>
		<core:set var="vCurrentLevel" value="${vCurrentLevel-1}"/>	
	</core:while>
	
</gel:script>