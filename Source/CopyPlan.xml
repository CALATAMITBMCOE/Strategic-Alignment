<gel:script xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:core="jelly:core"
    xmlns:file="jelly:com.niku.union.gel.FileTagLibrary"
    xmlns:gel="jelly:com.niku.union.gel.GELTagLibrary"
    xmlns:soap="jelly:com.niku.union.gel.SOAPTagLibrary"
    xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:sql="jelly:sql" xmlns:xog="http://www.niku.com/xog"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-inSTance">

   	<!--============================================================-->
	<!-- Package: STrategic Alignment 5.1 							-->
	<!-- Process: Copy STrategic Plan           					-->
	<!-- STep	: Copy STrategic Plan            					-->
	<!-- Action	: Copy STrategic Plan								-->
	<!-- Process: Generate Plan Snapshot          					-->
	<!-- STep	: Copy STrategic Plan            					-->
	<!-- Action	: Copy STrategic Plan								-->
   	<!--============================================================-->
	<!-- Object : STrategic Item 									-->
   	<!--============================================================-->
	<!-- Copy or Generate a Snapshot of the STrategic Plan			-->
	<!-- Parameter pOperation == COPY for Copy Plan 				-->
	<!-- Parameter pOperation == SNAPSHOT for Generate Snapshot 	-->
   	<!--============================================================-->
	 
	<core:if teST="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="STart Script"/>
		<gel:log level="debug" message=">>PersiSTed XOG URL   : ${XOGURL}"/> 
		<gel:log level="debug" message=">>PersiSTed LOG Folder: ${XOGlogFolder}"/> 
		<gel:log level="debug" message=">>PersiSTed WEB Folder: ${XOGwebFolder}"/> 
		<gel:log level="debug" message=">>PersiSTed SessionID : ${sessionID}"/> 
		<gel:log level="debug" message=">>PersiSTed DebugLevel: ${DebugLevel}"/> 
		<gel:log level="debug" message=">>PersiSTed dbVendor  : ${dbVendor}"/> 
		<gel:log level="debug" message=">>Process InSTance	  : ${gel_processInSTanceId}"/>
	</core:if>
	
    <gel:parameter default="COPY" var="pOperation"/>
	<core:set var="vPlanSTatus" value="SNAPSHOT"/>
	<core:if teST="${pOperation=='COPY'}">
		<core:set var="vPlanSTatus" value="DRAFT"/>
	</core:if>

    <gel:setDataSource dbId="niku"/>
	<core:set value="${gel_objectInSTanceId}" var="vItemID"/>
	
	<gel:parse var="v_xml_new">
		<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-inSTance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_cuSTomObjectInSTance.xsd">
		  <Header action="write" externalSource="NIKU" objectType="cuSTomObjectInSTance" version="14.4.0.234"/>
		  <cuSTomObjectInSTances objectCode="STrategic_item"/>
		</NikuDataBus>
	</gel:parse>
	
	<sql:query escapeText="false" var="vItemtoCopy">
		Select SI.NAME, SI.CODE, SI.STRAT_HIERARCHY, SIP.NAME, SIP.CODE, SIP.ID, SIP.LANGUAGE_CODE
		FROM ODF_CA_STRATEGIC_ITEM SI inner join  ODF_CA_STRATEGIC_ITEM SIP on SIP.ID = SI.STRAT_HIERARCHY 
		WHERE SI.ID = ${vItemID}
	</sql:query>
    <core:forEach items="${vItemtoCopy.rowsByIndex}" var="row">
        <core:set var="vItem_Name">${row[0]}</core:set>
        <core:set var="vItem_Code">${row[1]}</core:set>
        <core:set var="vItem_Hier">${row[2]}</core:set>
        <core:set var="vPlan_Name">${row[3]}</core:set>
        <core:set var="vPlan_Code">${row[4]}</core:set>
        <core:set var="vPlan_Intl">${row[5]}</core:set>
        <core:set var="vPlan_Lang">${row[6]}</core:set>
		<core:if teST="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="SI Found: ${vItem_Name}-${vItem_Code}. Plan is ${vPlan_Name}-${vPlan_Code}. Language is ${vPlan_Lang}."/> 
		</core:if>
		<core:if teST="${vPlan_Lang == ''}">
			<core:set var="vPlan_Lang">en</core:set>
			<gel:log level="debug" message="-- Blank Language is set to English ${vPlan_Lang}."/> 
		</core:if>

	    <sql:query escapeText="false" var="vGetMaxLevel">
			Select Max(ITEM_LEVEL) 
			FROM ODF_CA_STRATEGIC_ITEM SI 
			WHERE SI.STRAT_HIERARCHY = ${vPlan_Intl}
		</sql:query>
		<core:forEach items="${vGetMaxLevel.rowsByIndex}" var="row">
			<core:set var="vMaxLevel">${row[0]}</core:set>
			<gel:log level="debug" message="-- Found: Max Level=${vMaxLevel}."/> 
		</core:forEach>
				
		<!--SQL Server Compatibility-->
		<core:set var="sqlSTatement">
			select LKP.NAME, LKP2.NAME, SUBSTRING(CONVERT(nvarchar(30), getdate(), 20),1,10), SUBSTRING(CONVERT(nvarchar(30), getdate(), 20),12,5), 
					74-LEN(LKP.NAME+LKP2.NAME+SUBSTRING(CONVERT(nvarchar(30), getdate(), 20),1,10)+SUBSTRING(CONVERT(nvarchar(30), getdate(), 20),12,5))
			from cmn_lookups_v LKP
			  INNER JOIN cmn_lookups_v LKP2 on LKP.lookup_type = lkp2.LOOKUP_TYPE and LKP2.LANGUAGE_CODE = LKP.LANGUAGE_CODE
			where LKP.lookup_TYPE = 'STRAT_MAINT_STRINGS' and LKP.LANGUAGE_CODE = '${vPlan_Lang}' and LKP.LOOKUP_CODE = '${pOperation}' and LKP2.LOOKUP_CODE = 'ASOFDATE'
		</core:set>
		<core:if teST="${dbVendor=='oracle'}">
			<core:set var="sqlSTatement">
				select LKP.NAME, LKP2.NAME, TO_CHAR(${currentdateFunction}, 'YYYY-MM-DD'), TO_CHAR(${currentdateFunction}, 'HH24:MI'), 74-${lengthFunction}(LKP.NAME||LKP2.NAME||TO_CHAR(${currentdateFunction}, 'YYYY-MM-DD')||TO_CHAR(${currentdateFunction}, 'HH24:MI'))
				from cmn_lookups_v LKP
				  INNER JOIN cmn_lookups_v LKP2 on LKP.lookup_type = lkp2.LOOKUP_TYPE and LKP2.LANGUAGE_CODE = LKP.LANGUAGE_CODE
				where LKP.lookup_TYPE = 'STRAT_MAINT_STRINGS' and LKP.LANGUAGE_CODE = '${vPlan_Lang}' and LKP.LOOKUP_CODE = '${pOperation}' and LKP2.LOOKUP_CODE = 'ASOFDATE'
			</core:set>
		</core:if>
		
		<!-- Find STrings to name the new Plan -->
	    <sql:query escapeText="false" var="vFindSTrings">
			${sqlSTatement}
		</sql:query>
		<core:forEach items="${vFindSTrings.rowsByIndex}" var="row">
			<core:set var="vNameSTring">${row[0]}</core:set>
			<core:set var="vAsOfDateSTring">${row[1]}</core:set>
			<core:set var="vDateSTring">${row[2]}</core:set>
			<core:set var="vTimeSTring">${row[3]}</core:set>
			<core:set var="vSTringSize">${row[4]}</core:set>
			<core:if teST="${DebugLevel &gt; 0}">
				<gel:log level="debug" message="-- STrings Found: ${vNameSTring}-${vAsOfDateSTring}. Date/Time is ${vDateSTring}-${vTimeSTring}. STring Size is ${vSTringSize}."/> 
			</core:if>
		</core:forEach>
		
		<!-- Find the New Code -->
		<core:set var="vCopyNumber" value="1"/>
		<core:set var="exitClause" value="0"/>
		<core:while teST="${exitClause == 0}">
			<core:set var="exitClause" value="1"/>
			<core:set var="sqlSTatement">
				select count(*) from odf_ca_STrategic_item where code = '${vPlan_Code}-'+REPLICATE('0',6-LEN(RTRIM(${vCopyNumber})))+RTRIM(${vCopyNumber})
			</core:set>
			<core:if teST="${dbVendor=='oracle'}">
				<core:set var="sqlSTatement">
					select count(*) from odf_ca_STrategic_item where code = '${vPlan_Code}-'||trim(to_char(${vCopyNumber},'09'))
				</core:set>
			</core:if>
			
			<sql:query escapeText="false" var="vNewCode">
				${sqlSTatement}
			</sql:query>
			<core:forEach items="${vNewCode.rowsByIndex}" var="row">
				<core:set var="vCount">${row[0]}</core:set>
				<core:if teST="${vCount &gt; 0}">
					<core:set var="vCopyNumber">${vCopyNumber+1}</core:set>
					<core:set var="exitClause" value="0"/>
				</core:if>
			</core:forEach>
		</core:while>
		<core:set var="vNewCode" value="${vCopyNumber}"/>
		<core:if teST="${10 &gt; vCopyNumber}">
			<core:set var="vNewCode" value="0${vNewCode}"/>
		</core:if>
		<core:set var="vNewCode" value="-${vNewCode}"/>
		<gel:log level="debug" message="-- New Code is ${vNewCode}."/> 
		
		<!-- Read Plan level -->
		<gel:parse var="v_xml_root">
			<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-inSTance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_read.xsd">
				<Header version="14.3" action="read" objectType="cuSTomObjectInSTance" externalSource="NIKU">
					<args name="skip value" value="0"/>
				</Header>
				<CuSTomObjectInSTanceQuery>
					<Filter name="objectCode" criteria="EQUALS">STrategic_item</Filter>
					<Filter name="inSTanceCode" criteria="EQUALS">${vPlan_Code}</Filter>
				</CuSTomObjectInSTanceQuery>
			</NikuDataBus>
		</gel:parse>

		<core:if teST="${DebugLevel &gt; 1}">
			<gel:serialize var="${v_xml_root}" fileName="${XOGwebFolder}/XOGREAD_SI_${vPlan_Code}.xml"/>
			<gel:log level="debug" message="XOG Read can be found at: ${XOGwebPath}/XOGREAD_SI_${vPlan_Code}.xml"/> 
		</core:if>

		<!-- Calling XOG-->
		<core:catch var="v_xog_exception">
			<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult">
				<soap:message>
					<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
						<soapenv:Header>
							<xog:Auth>
								<xog:SessionID>${sessionID}</xog:SessionID>
							</xog:Auth>
						</soapenv:Header>
						<soapenv:Body>
							<gel:include select="$v_xml_root/NikuDataBus"/>
						</soapenv:Body>
					</soapenv:Envelope>
				</soap:message>
			</soap:invoke>
		</core:catch>

		<core:if teST="${v_xog_exception != null}">
			<gel:log level="warning" message="Caught Exception: ${v_xog_exception}."/>
			<core:set var="exitClause" value="1"/>
		</core:if>
  
		<core:if teST="${v_xog_exception == null}">
			<core:if teST="${DebugLevel &gt; 1}">
				<gel:serialize var="${runresult}" fileName="${XOGwebFolder}/XOGWRITE_SI_${vPlan_Code}.xml"/>
				<gel:log level="debug" message="XOG Output can be found at: ${XOGwebPath}/XOGWRITE_SI_${vPlan_Code}.xml"/> 
			</core:if>

			<gel:set asSTring="true" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatus/@STate" var="XOGoutcome"/>
			<core:switch on="${XOGoutcome}">
				<core:case value="SUCCESS">
					<gel:set asSTring="false" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatiSTics/@totalNumberOfRecords" var="totalNumberOfRecords"/>
					<core:if teST="${DebugLevel &gt; 0}">
						<core:set var="vMessage" value="InSTances XOGed-out this requeST ${totalNumberOfRecords}"/>
						<gel:log level="debug" message="${vMessage}"/>
					</core:if>
				</core:case>
				<core:case value="FAILURE">
					<gel:set asSTring="false" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatiSTics" var="STats"/>
					<gel:set asSTring="false" select="$STats/@totalNumberOfRecords" var="totalNumberOfRecords"/>
					<gel:set asSTring="false" select="$STats/@failureRecords" var="failureRecords"/>
					<core:if teST="${DebugLevel &gt; 0}">
						<core:set var="vMessage" value="XOG failed.  Out of ${totalNumberOfRecords} records, ${failureRecords} failed."/>
						<gel:log level="debug" message="${vMessage}"/>
					</core:if>
				</core:case>
			</core:switch>

			<core:set var="InputSTring" value="${vPlan_Name}"/>
			<core:invoke var="vItemNameSize" on="${InputSTring}" method="length"/>
			<core:if teST="${vItemNameSize &gt; vSTringSize}">
				<core:set var="vItemNameSize" value="${vSTringSize}"/>
			</core:if>

			<core:invoke var="vPlanNameTruncated" on="${InputSTring}" method="subSTring">
				<core:arg type="int" value="0"/>
				<core:arg type="int" value="${vItemNameSize}"/>
			</core:invoke>
			
			<!-- Change InSTance Code, As Of Date, Original Plan, STatus, Name and remove Hierarchy -->
			<gel:forEach select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/cuSTomObjectInSTances/inSTance" var="vInSTance">
				<gel:set select="$vInSTance/@inSTanceCode" value="${vPlan_Code}${vNewCode}"/>
			</gel:forEach>
			<gel:forEach select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/cuSTomObjectInSTances/inSTance/CuSTomInformation/ColumnValue" var="vCuSTomInfo">
				<gel:set var="vColumName" select="$vCuSTomInfo/@name" asSTring="true"/>
				<core:if teST="${vColumName=='code'}">
					<gel:set select="$vCuSTomInfo/text()" value="${vPlan_Code}${vNewCode}"/>
				</core:if>
				<core:if teST="${vColumName=='name'}">
					<gel:set select="$vCuSTomInfo/text()" value="${vNameSTring} [${vPlanNameTruncated}] ${vAsOfDateSTring} ${vDateSTring} ${vTimeSTring}"/>
				</core:if>
				<core:if teST="${vColumName=='STrat_plan_STatus'}">
					<gel:set select="$vCuSTomInfo/text()" value="${vPlanSTatus}"/>
				</core:if>
				<core:set var="vFoundAsOfDate" value="0"/>
				<core:if teST="${vColumName=='plan_as_of_date'}">
					<core:set var="vFoundAsOfDate" value="1"/>
					<gel:set select="$vCuSTomInfo/text()" value="${vDateSTring}T${vTimeSTring}:00"/>
				</core:if>
				<core:set var="vFoundPlanOrig" value="0"/>
				<core:if teST="${vColumName=='STrat_orig_item'}">
					<core:set var="vFoundPlanOrig" value="1"/>
					<gel:set select="$vCuSTomInfo/text()" value="${vPlan_Code}"/>
				</core:if>
				<core:if teST="${vColumName=='STrat_hierarchy'}">
					<gel:set select="$vCuSTomInfo/text()" value=""/>
				</core:if>
				<core:if teST="${pOperation=='COPY'}">
					<core:if teST="${vColumName=='itemSTatus'}">
						<gel:set select="$vCuSTomInfo/text()" value="0"/>
					</core:if>
					<core:if teST="${vColumName=='item_STatus_direct'}">
						<gel:set select="$vCuSTomInfo/text()" value="0"/>
					</core:if>
					<core:if teST="${vColumName=='item_STatus_children'}">
						<gel:set select="$vCuSTomInfo/text()" value="0"/>
					</core:if>
					<core:if teST="${vColumName=='kpi_STatus'}">
						<gel:set select="$vCuSTomInfo/text()" value="0"/>
					</core:if>
					<core:if teST="${vColumName=='kpi_STatus_direct'}">
						<gel:set select="$vCuSTomInfo/text()" value="0"/>
					</core:if>
					<core:if teST="${vColumName=='kpi_STatus_children'}">
						<gel:set select="$vCuSTomInfo/text()" value="0"/>
					</core:if>
				</core:if>
			</gel:forEach>
			<!-- If no As Of Date is found, insert one -->
			<core:if teST="${vFoundAsOfDate == 0}">
				<gel:parse var="v_xml_planAsOfDate">
					<ColumnValue name="plan_as_of_date">${vDateSTring}T${vTimeSTring}:00</ColumnValue>
				</gel:parse>
				<gel:set insert="true" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/cuSTomObjectInSTances/inSTance/CuSTomInformation" value="${v_xml_planAsOfDate}"/>
			</core:if>
			<!-- If no Original Item is found, insert one -->
			<core:if teST="${vFoundPlanOrig == 0}">
				<gel:parse var="v_xml_planOrig">
					<ColumnValue name="STrat_orig_item">${vPlan_Code}</ColumnValue>
				</gel:parse>
				<gel:set insert="true" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/cuSTomObjectInSTances/inSTance/CuSTomInformation" value="${v_xml_planOrig}"/>
			</core:if>
			
			<gel:set select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus" var="v_xml_new"/>			
			<core:if teST="${DebugLevel &gt; 1}">
				<gel:serialize var="${v_xml_new}" fileName="${XOGwebFolder}/XOGWRITE_NewSI_${vPlan_Code}${vNewCode}.xml"/>
				<gel:log level="debug" message="XOG Output can be found at: ${XOGwebPath}/XOGWRITE_NewSI_${vPlan_Code}${vNewCode}.xml"/> 
			</core:if>
			
			<!-- Calling XOG-->
			<core:catch var="v_xog_exception">
				<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult">
					<soap:message>
						<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
							<soapenv:Header>
								<xog:Auth>
									<xog:SessionID>${sessionID}</xog:SessionID>
								</xog:Auth>
							</soapenv:Header>
							<soapenv:Body>
								<gel:include select="$v_xml_new"/>
							</soapenv:Body>
						</soapenv:Envelope>
					</soap:message>
				</soap:invoke>
			</core:catch>

			<core:if teST="${v_xog_exception != null}">
				<gel:log level="warning" message="Caught Exception: ${v_xog_exception}."/>
				<core:set var="exitClause" value="1"/>
			</core:if>
	  
			<core:if teST="${v_xog_exception == null}">
				<core:if teST="${DebugLevel &gt; 1}">
					<gel:serialize var="${runresult}" fileName="${XOGwebFolder}/XOGRESULT_NewSI_${vPlan_Code}${vNewCode}.xml"/>
					<gel:log level="debug" message="XOG Output can be found at: ${XOGwebPath}/XOGRESULT_NewSI_${vPlan_Code}${vNewCode}.xml"/> 
				</core:if>

				<gel:set asSTring="true" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatus/@STate" var="XOGoutcome"/>
				<core:switch on="${XOGoutcome}">
					<core:case value="SUCCESS">
						<gel:set asSTring="false" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatiSTics/@totalNumberOfRecords" var="totalNumberOfRecords"/>
						<core:if teST="${DebugLevel &gt; 0}">
							<core:set var="vMessage" value="InSTances XOGed-out this requeST ${totalNumberOfRecords}"/>
							<gel:log level="debug" message="${vMessage}"/>
						</core:if>
					</core:case>
					<core:case value="FAILURE">
						<gel:set asSTring="false" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatiSTics" var="STats"/>
						<gel:set asSTring="false" select="$STats/@totalNumberOfRecords" var="totalNumberOfRecords"/>
						<gel:set asSTring="false" select="$STats/@failureRecords" var="failureRecords"/>
						<core:if teST="${DebugLevel &gt; 0}">
							<core:set var="vMessage" value="XOG failed.  Out of ${totalNumberOfRecords} records, ${failureRecords} failed."/>
							<gel:log level="debug" message="${vMessage}"/>
						</core:if>
					</core:case>
				</core:switch>
			</core:if>

			<!-- Update Hierarchy Attribute for new Plan -->
			<gel:parse var="v_xml_new">
				<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-inSTance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_cuSTomObjectInSTance.xsd">
					<Header action="write" externalSource="NIKU" objectType="cuSTomObjectInSTance" version="14.4.0.234"/>
					<cuSTomObjectInSTances objectCode="STrategic_item">
						<inSTance inSTanceCode="${vPlan_Code}${vNewCode}" objectCode="STrategic_item">
							<CuSTomInformation>
								<ColumnValue name="STrat_hierarchy">${vPlan_Code}${vNewCode}</ColumnValue>
							</CuSTomInformation>
						</inSTance>
					</cuSTomObjectInSTances>
				</NikuDataBus>
			</gel:parse>
			
			<core:if teST="${DebugLevel &gt; 1}">
				<gel:serialize var="${v_xml_new}" fileName="${XOGwebFolder}/XOGWRITE_NewSI_${vPlan_Code}${vNewCode}_HIER.xml"/>
				<gel:log level="debug" message="XOG Output can be found at: ${XOGwebPath}/XOGWRITE_NewSI_${vPlan_Code}${vNewCode}_HIER.xml"/> 
			</core:if>
			<!-- Calling XOG-->
			<core:catch var="v_xog_exception">
				<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult">
					<soap:message>
						<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
							<soapenv:Header>
								<xog:Auth>
									<xog:SessionID>${sessionID}</xog:SessionID>
								</xog:Auth>
							</soapenv:Header>
							<soapenv:Body>
								<gel:include select="$v_xml_new"/>
							</soapenv:Body>
						</soapenv:Envelope>
					</soap:message>
				</soap:invoke>
			</core:catch>

			<core:if teST="${v_xog_exception != null}">
				<gel:log level="warning" message="Caught Exception: ${v_xog_exception}."/>
				<core:set var="exitClause" value="1"/>
			</core:if>
	  
			<core:if teST="${v_xog_exception == null}">
				<core:if teST="${DebugLevel &gt; 1}">
					<gel:serialize var="${runresult}" fileName="${XOGwebFolder}/XOGRESULT_NewSI_${vPlan_Code}${vNewCode}_HIER.xml"/>
					<gel:log level="debug" message="XOG Output can be found at: ${XOGwebPath}/XOGRESULT_NewSI_${vPlan_Code}${vNewCode}_HIER.xml"/> 
				</core:if>

				<gel:set asSTring="true" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatus/@STate" var="XOGoutcome"/>
				<core:switch on="${XOGoutcome}">
					<core:case value="SUCCESS">
						<gel:set asSTring="false" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatiSTics/@totalNumberOfRecords" var="totalNumberOfRecords"/>
						<core:if teST="${DebugLevel &gt; 0}">
							<core:set var="vMessage" value="InSTances XOGed-out this requeST ${totalNumberOfRecords}"/>
							<gel:log level="debug" message="${vMessage}"/>
						</core:if>
					</core:case>
					<core:case value="FAILURE">
						<gel:set asSTring="false" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatiSTics" var="STats"/>
						<gel:set asSTring="false" select="$STats/@totalNumberOfRecords" var="totalNumberOfRecords"/>
						<gel:set asSTring="false" select="$STats/@failureRecords" var="failureRecords"/>
						<core:if teST="${DebugLevel &gt; 0}">
							<core:set var="vMessage" value="XOG failed.  Out of ${totalNumberOfRecords} records, ${failureRecords} failed."/>
							<gel:log level="debug" message="${vMessage}"/>
						</core:if>
					</core:case>
				</core:switch>
			</core:if>
			
			<!-- Copy the reST of the Plan by Level -->
			<core:set var="vCurrentLevel" value="2"/>
			<core:while teST="${vMaxLevel &gt;= vCurrentLevel}">
				<core:if teST="${DebugLevel &gt; 0}">
					<gel:log level="debug" message="-- Processing Level ${vCurrentLevel}"/> 
				</core:if>
				<sql:query escapeText="false" var="vItemtoCopy">
					Select SI.NAME, SI.CODE
					FROM ODF_CA_STRATEGIC_ITEM SI 
					WHERE SI.STRAT_HIERARCHY = ${vPlan_Intl}
					AND SI.ITEM_LEVEL = ${vCurrentLevel}
				</sql:query>
				<core:forEach items="${vItemtoCopy.rowsByIndex}" var="row">
					<core:set var="vItem_Name">${row[0]}</core:set>
					<core:set var="vItem_Code">${row[1]}</core:set>
					<core:if teST="${DebugLevel &gt; 0}">
						<gel:log level="debug" message="SI Found: ${vItem_Name}-${vItem_Code}."/> 
					</core:if>
				
					<!-- Read Items for level -->
					<gel:parse var="v_xml_root">
						<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-inSTance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_read.xsd">
							<Header version="14.3" action="read" objectType="cuSTomObjectInSTance" externalSource="NIKU">
								<args name="skip value" value="0"/>
							</Header>
							<CuSTomObjectInSTanceQuery>
								<Filter name="objectCode" criteria="EQUALS">STrategic_item</Filter>
								<Filter name="inSTanceCode" criteria="EQUALS">${vItem_Code}</Filter>
							</CuSTomObjectInSTanceQuery>
						</NikuDataBus>
					</gel:parse>

					<core:if teST="${DebugLevel &gt; 1}">
						<gel:serialize var="${v_xml_root}" fileName="${XOGwebFolder}/XOGREAD_SI_${vPlan_Code}_${vItem_Code}.xml"/>
						<gel:log level="debug" message="XOG Read can be found at: ${XOGwebPath}/XOGREAD_SI_${vPlan_Code}_${vItem_Code}.xml"/> 
					</core:if>

					<!-- Calling XOG-->
					<core:catch var="v_xog_exception">
						<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult">
							<soap:message>
								<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
									<soapenv:Header>
										<xog:Auth>
											<xog:SessionID>${sessionID}</xog:SessionID>
										</xog:Auth>
									</soapenv:Header>
									<soapenv:Body>
										<gel:include select="$v_xml_root/NikuDataBus"/>
									</soapenv:Body>
								</soapenv:Envelope>
							</soap:message>
						</soap:invoke>
					</core:catch>

					<core:if teST="${v_xog_exception != null}">
						<gel:log level="warning" message="Caught Exception: ${v_xog_exception}."/>
						<core:set var="exitClause" value="1"/>
					</core:if>
			  
					<core:if teST="${v_xog_exception == null}">
						<core:if teST="${DebugLevel &gt; 1}">
							<gel:serialize var="${runresult}" fileName="${XOGwebFolder}/XOGWRITE_SI_${vPlan_Code}_${vItem_Code}.xml"/>
							<gel:log level="debug" message="XOG Output can be found at: ${XOGwebPath}/XOGWRITE_SI_${vPlan_Code}_${vItem_Code}.xml"/> 
						</core:if>

						<gel:set asSTring="true" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatus/@STate" var="XOGoutcome"/>
						<core:switch on="${XOGoutcome}">
							<core:case value="SUCCESS">
								<gel:set asSTring="false" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatiSTics/@totalNumberOfRecords" var="totalNumberOfRecords"/>
								<core:if teST="${DebugLevel &gt; 0}">
									<core:set var="vMessage" value="InSTances XOGed-out this requeST ${totalNumberOfRecords}"/>
									<gel:log level="debug" message="${vMessage}"/>
								</core:if>
							</core:case>
							<core:case value="FAILURE">
								<gel:set asSTring="false" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatiSTics" var="STats"/>
								<gel:set asSTring="false" select="$STats/@totalNumberOfRecords" var="totalNumberOfRecords"/>
								<gel:set asSTring="false" select="$STats/@failureRecords" var="failureRecords"/>
								<core:if teST="${DebugLevel &gt; 0}">
									<core:set var="vMessage" value="XOG failed.  Out of ${totalNumberOfRecords} records, ${failureRecords} failed."/>
									<gel:log level="debug" message="${vMessage}"/>
								</core:if>
							</core:case>
						</core:switch>
						
						<core:if teST="${pOperation=='SNAPSHOT'}">
							<core:set var="InputSTring" value="${vItem_Name}"/>
							<core:invoke var="vItemNameSize" on="${InputSTring}" method="length"/>
							<core:if teST="${vItemNameSize &gt; vSTringSize}">
								<core:set var="vItemNameSize" value="${vSTringSize}"/>
							</core:if>
							<core:invoke var="vItemNameTruncated" on="${InputSTring}" method="subSTring">
								<core:arg type="int" value="0"/>
								<core:arg type="int" value="${vItemNameSize}"/>
							</core:invoke>
						</core:if>
						
						<!-- Change InSTance Code, As Of Date, Original Plan, STatus -->
						<gel:forEach select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/cuSTomObjectInSTances/inSTance" var="vInSTance">
							<gel:set asSTring="true" select="$vInSTance/@inSTanceCode" var="vItem_Code"/>
							<gel:log level="debug" message="---- Processing inSTance ${vItem_Code}"/>
							<gel:set select="$vInSTance/@inSTanceCode" value="${vItem_Code}${vNewCode}"/>
							<gel:forEach select="$vInSTance/CuSTomInformation/ColumnValue" var="vCuSTomInfo">
								<gel:set var="vColumName" select="$vCuSTomInfo/@name" asSTring="true"/>
								<core:if teST="${vColumName=='code'}">
									<gel:set select="$vCuSTomInfo/text()" value="${vItem_Code}${vNewCode}"/>
								</core:if>
								<core:if teST="${vColumName=='parentitem'}">
									<gel:set asSTring="true" select="$vCuSTomInfo/text()" var="vParentItem"/>
									<gel:log level="debug" message="----- Parent Is ${vParentItem}"/>
									<!-- Due to a probable Bug, PARENTITEM cannot be updated using UNIQUE_CODE. MuST Find INTERNAL_ID. -->
									<sql:query escapeText="false" var="vItemParent">
										Select SI.ID FROM ODF_CA_STRATEGIC_ITEM SI WHERE SI.CODE = '${vParentItem}${vNewCode}'  
									</sql:query>
									<core:set var="vPrnt_Intl"/>
									<core:forEach items="${vItemParent.rowsByIndex}" var="row">
										<core:set var="vPrnt_Intl">${row[0]}</core:set>
										<gel:log level="debug" message="----- Found Internal_ID ${vPrnt_Intl} for Parent Item ${vParentItem}${vNewCode}."/>
									</core:forEach>
									<gel:set select="$vCuSTomInfo/text()" value="${vPrnt_Intl}"/>
								</core:if>
								<core:if teST="${pOperation=='SNAPSHOT'}">
									<core:if teST="${vColumName=='name'}">
										<gel:set select="$vCuSTomInfo/text()" value="${vNameSTring} [${vItemNameTruncated}] ${vAsOfDateSTring} ${vDateSTring} ${vTimeSTring}"/>
									</core:if>
								</core:if>
								<core:if teST="${vColumName=='STrat_plan_STatus'}">
									<gel:set select="$vCuSTomInfo/text()" value="${vPlanSTatus}"/>
								</core:if>
								<core:set var="vFoundAsOfDate" value="0"/>
								<core:if teST="${vColumName=='plan_as_of_date'}">
									<core:set var="vFoundAsOfDate" value="1"/>
									<gel:set select="$vCuSTomInfo/text()" value="${vDateSTring}T${vTimeSTring}:00"/>
								</core:if>
								<core:set var="vFoundPlanOrig" value="0"/>
								<core:if teST="${vColumName=='STrat_orig_item'}">
									<core:set var="vFoundPlanOrig" value="1"/>
									<gel:set select="$vCuSTomInfo/text()" value="${vItem_Code}"/>
								</core:if>
								<core:if teST="${vColumName=='STrat_hierarchy'}">
									<gel:set select="$vCuSTomInfo/text()" value="${vPlan_Code}${vNewCode}"/>
								</core:if>
								<core:if teST="${pOperation=='COPY'}">
									<core:if teST="${vColumName=='itemSTatus'}">
										<gel:set select="$vCuSTomInfo/text()" value="0"/>
									</core:if>
									<core:if teST="${vColumName=='item_STatus_direct'}">
										<gel:set select="$vCuSTomInfo/text()" value="0"/>
									</core:if>
									<core:if teST="${vColumName=='item_STatus_children'}">
										<gel:set select="$vCuSTomInfo/text()" value="0"/>
									</core:if>
									<core:if teST="${vColumName=='kpi_STatus'}">
										<gel:set select="$vCuSTomInfo/text()" value="0"/>
									</core:if>
									<core:if teST="${vColumName=='kpi_STatus_direct'}">
										<gel:set select="$vCuSTomInfo/text()" value="0"/>
									</core:if>
									<core:if teST="${vColumName=='kpi_STatus_children'}">
										<gel:set select="$vCuSTomInfo/text()" value="0"/>
									</core:if>
								</core:if>
							</gel:forEach>
							<!-- If no As Of Date is found, insert one -->
							<core:if teST="${vFoundAsOfDate == 0}">
								<gel:parse var="v_xml_planAsOfDate">
									<ColumnValue name="plan_as_of_date">${vDateSTring}T${vTimeSTring}:00</ColumnValue>
								</gel:parse>
								<gel:set insert="true" select="$vInSTance/CuSTomInformation" value="${v_xml_planAsOfDate}"/>
							</core:if>
							<!-- If no Original Item is found, insert one -->
							<core:if teST="${vFoundPlanOrig == 0}">
								<gel:parse var="v_xml_planOrig">
									<ColumnValue name="STrat_orig_item">${vItem_Code}</ColumnValue>
								</gel:parse>
								<gel:set insert="true" select="$vInSTance/CuSTomInformation" value="${v_xml_planOrig}"/>
							</core:if>
						</gel:forEach>
				
						<gel:set select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus" var="v_xml_new"/>			
						<core:if teST="${DebugLevel &gt; 1}">
							<gel:serialize var="${v_xml_new}" fileName="${XOGwebFolder}/XOGWRITE_NewSI_${vPlan_Code}${vNewCode}_${vItem_Code}.xml"/>
							<gel:log level="debug" message="XOG Output can be found at: ${XOGwebPath}/XOGWRITE_NewSI_${vPlan_Code}${vNewCode}_${vItem_Code}.xml"/> 
						</core:if>
				
						<!-- Calling XOG-->
						<core:catch var="v_xog_exception">
							<soap:invoke endpoint="${XOGURL}/niku/xog" var="runresult">
								<soap:message>
									<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
										<soapenv:Header>
											<xog:Auth>
												<xog:SessionID>${sessionID}</xog:SessionID>
											</xog:Auth>
										</soapenv:Header>
										<soapenv:Body>
											<gel:include select="$v_xml_new"/>
										</soapenv:Body>
									</soapenv:Envelope>
								</soap:message>
							</soap:invoke>
						</core:catch>

						<core:if teST="${v_xog_exception != null}">
							<gel:log level="warning" message="Caught Exception: ${v_xog_exception}."/>
							<core:set var="exitClause" value="1"/>
						</core:if>
				  
						<core:if teST="${v_xog_exception == null}">
							<core:if teST="${DebugLevel &gt; 1}">
								<gel:serialize var="${runresult}" fileName="${XOGwebFolder}/XOGRESULT_NewSI_${vPlan_Code}${vNewCode}_${vItem_Code}.xml"/>
								<gel:log level="debug" message="XOG Output can be found at: ${XOGwebPath}/XOGRESULT_NewSI_${vPlan_Code}${vNewCode}_${vItem_Code}.xml"/> 
							</core:if>

							<gel:set asSTring="true" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatus/@STate" var="XOGoutcome"/>
							<core:switch on="${XOGoutcome}">
								<core:case value="SUCCESS">
									<gel:set asSTring="false" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatiSTics/@totalNumberOfRecords" var="totalNumberOfRecords"/>
									<core:if teST="${DebugLevel &gt; 0}">
										<core:set var="vMessage" value="InSTances XOGed-out this requeST ${totalNumberOfRecords}"/>
										<gel:log level="debug" message="${vMessage}"/>
									</core:if>
								</core:case>
								<core:case value="FAILURE">
									<gel:set asSTring="false" select="$runresult/soapenv:Envelope/soapenv:Body/NikuDataBus/XOGOutput/STatiSTics" var="STats"/>
									<gel:set asSTring="false" select="$STats/@totalNumberOfRecords" var="totalNumberOfRecords"/>
									<gel:set asSTring="false" select="$STats/@failureRecords" var="failureRecords"/>
									<core:if teST="${DebugLevel &gt; 0}">
										<core:set var="vMessage" value="XOG failed.  Out of ${totalNumberOfRecords} records, ${failureRecords} failed."/>
										<gel:log level="debug" message="${vMessage}"/>
									</core:if>
								</core:case>
							</core:switch>
						</core:if>
					</core:if>
				</core:forEach>
				<core:set var="vCurrentLevel" value="${vCurrentLevel+1}"/>
					
			</core:while>
		</core:if>
	</core:forEach>

</gel:script>
