<gel:script xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:core="jelly:core"
    xmlns:file="jelly:com.niku.union.gel.FileTagLibrary"
    xmlns:gel="jelly:com.niku.union.gel.GELTagLibrary"
    xmlns:soap="jelly:com.niku.union.gel.SOAPTagLibrary"
    xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:sql="jelly:sql" xmlns:xog="http://www.niku.com/xog"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

   	<!---------------------------------------------------------------->
	<!-- Package: Strategic Alignment 4.0 							-->
	<!-- Process: Strategic Item - CleanUp Tree						-->
	<!-- Step	: Start												-->
	<!-- Action	: Clean up Tree										-->
	<!---------------------------------------------------------------->
	<!-- Object : n/a												-->
	<!---------------------------------------------------------------->
	<!-- This process cleans up the tree on strat_tree_flat			-->
	<!---------------------------------------------------------------->
	
	<core:set var="DebugLevel" value="1"/> 
	<core:if test="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="Start Script"/>
		<gel:log level="debug" message=">>DebugLevel: ${DebugLevel}"/> 
	</core:if>

    <gel:setDataSource dbId="niku"/>
    
	<!-- Children that don't exist -->
    <sql:query escapeText="false" var="vInvalidChildren">
		Select ST.ID, ST.CODE, ST.STRAT_SCOPE, ST.PARENT_ITEM, ST.CHILD_ITEM
		FROM ODF_CA_STRAT_TREE_FLAT ST
		WHERE NOT EXISTS (Select 'x' 
							From ODF_CA_STRATEGIC_ITEM SI
							Where SI.ID=ST.CHILD_ITEM)
	</sql:query>
    <core:forEach items="${vInvalidChildren.rowsByIndex}" var="row">
        <core:set var="vTree_Intl">${row[0]}</core:set>
        <core:set var="vTree_Code">${row[1]}</core:set>
        <core:set var="vTree_Scop">${row[2]}</core:set>
        <core:set var="vTree_Parn">${row[3]}</core:set>
        <core:set var="vTree_Chld">${row[4]}</core:set>
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="Found Invalid Child Item ${vTree_Code}: Parent ${vTree_Parn} Child ${vTree_Chld} Scope ${vTree_Scop}."/> 
		</core:if>
		<sql:update escapeText="false" var="vCleanUp1">
			DELETE FROM ODF_CA_STRAT_TREE_FLAT 
			WHERE CODE='${vTree_Code}'
		</sql:update>
    </core:forEach>

	<!-- Parents that don't exist -->
    <sql:query escapeText="false" var="vInvalidParents">
		Select ST.ID, ST.CODE, ST.STRAT_SCOPE, ST.PARENT_ITEM, ST.CHILD_ITEM
		FROM ODF_CA_STRAT_TREE_FLAT ST
		WHERE NOT EXISTS (Select 'x' 
							From ODF_CA_STRATEGIC_ITEM SI
							Where SI.ID=ST.PARENT_ITEM)
	</sql:query>
    <core:forEach items="${vInvalidParents.rowsByIndex}" var="row">
        <core:set var="vTree_Intl">${row[0]}</core:set>
        <core:set var="vTree_Code">${row[1]}</core:set>
        <core:set var="vTree_Scop">${row[2]}</core:set>
        <core:set var="vTree_Parn">${row[3]}</core:set>
        <core:set var="vTree_Chld">${row[4]}</core:set>
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="Found Invalid Parent Item ${vTree_Code}: Parent ${vTree_Parn} Child ${vTree_Chld} Scope ${vTree_Scop}."/> 
		</core:if>
		<sql:update escapeText="false" var="vCleanUp2">
			DELETE FROM ODF_CA_STRAT_TREE_FLAT 
			WHERE CODE='${vTree_Code}'
		</sql:update>
    </core:forEach>

	<!-- Scopes that don't exist -->
    <sql:query escapeText="false" var="vInvalidScope">
		Select ST.ID, ST.CODE, ST.STRAT_SCOPE, ST.PARENT_ITEM, ST.CHILD_ITEM
		FROM ODF_CA_STRAT_TREE_FLAT ST
		WHERE NOT EXISTS (Select 'x' 
							From ODF_CA_STRAT_SCOPE SC
							Where SC.ID=ST.STRAT_SCOPE)
	</sql:query>
    <core:forEach items="${vInvalidScope.rowsByIndex}" var="row">
        <core:set var="vTree_Intl">${row[0]}</core:set>
        <core:set var="vTree_Code">${row[1]}</core:set>
        <core:set var="vTree_Scop">${row[2]}</core:set>
        <core:set var="vTree_Parn">${row[3]}</core:set>
        <core:set var="vTree_Chld">${row[4]}</core:set>
		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="Found Invalid Scope for Item ${vTree_Code}: Parent ${vTree_Parn} Child ${vTree_Chld} Scope ${vTree_Scop}."/> 
		</core:if>
		<sql:update escapeText="false" var="vCleanUp2">
			DELETE FROM ODF_CA_STRAT_TREE_FLAT 
			WHERE CODE='${vTree_Code}'
		</sql:update>
    </core:forEach>
	
</gel:script>
